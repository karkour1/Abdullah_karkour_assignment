
LCD_KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fb6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000130  00800060  00001fb6  0000204a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800190  00800190  0000217a  2**0
                  ALLOC
  3 .stab         000010d4  00000000  00000000  0000217c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d15  00000000  00000000  00003250  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00003f65  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00004105  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  000042f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  00006702  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  00007a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00008c60  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  00008e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  00009116  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009a84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 eb       	ldi	r30, 0xB6	; 182
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 39       	cpi	r26, 0x90	; 144
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e9       	ldi	r26, 0x90	; 144
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 39       	cpi	r26, 0x97	; 151
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 99 0b 	call	0x1732	; 0x1732 <main>
      8a:	0c 94 d9 0f 	jmp	0x1fb2	; 0x1fb2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 01 0d 	jmp	0x1a02	; 0x1a02 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e7       	ldi	r26, 0x70	; 112
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 01 0d 	jmp	0x1a02	; 0x1a02 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__stack+0x3f>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__stack+0x55>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__stack+0x2d>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__stack+0x3f>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__stack+0x35>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__stack+0x3b>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__stack+0x55>
     494:	80 e7       	ldi	r24, 0x70	; 112
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__stack+0x1c7>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__stack+0x51>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__stack+0x1c7>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__stack+0x67>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__stack+0x1c7>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__stack+0xd3>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__stack+0xc7>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__stack+0xef>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__stack+0x109>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__stack+0x8f>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__stack+0x14d>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__stack+0x141>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__stack+0x11f>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__stack+0x16b>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__stack+0x153>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__stack+0x1ad>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__stack+0x1ad>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__stack+0x1ad>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__stack+0x1b7>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e7       	ldi	r22, 0x70	; 112
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__ltsf2+0x56>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__ltsf2+0x56>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__ltsf2+0x58>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 2d 0d 	jmp	0x1a5a	; 0x1a5a <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	e8 58       	subi	r30, 0x88	; 136
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <LCD_EN_Pluse>:



/* LCD APIS */
void LCD_EN_Pluse(void)
{
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	2e 97       	sbiw	r28, 0x0e	; 14
     e38:	0f b6       	in	r0, 0x3f	; 63
     e3a:	f8 94       	cli
     e3c:	de bf       	out	0x3e, r29	; 62
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	cd bf       	out	0x3d, r28	; 61
	LCD_EN_PORT &= ~(1<<LCD_EN_PIN);
     e42:	a8 e3       	ldi	r26, 0x38	; 56
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	e8 e3       	ldi	r30, 0x38	; 56
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	87 7f       	andi	r24, 0xF7	; 247
     e4e:	8c 93       	st	X, r24
     e50:	80 e0       	ldi	r24, 0x00	; 0
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	a8 e4       	ldi	r26, 0x48	; 72
     e56:	b2 e4       	ldi	r27, 0x42	; 66
     e58:	8b 87       	std	Y+11, r24	; 0x0b
     e5a:	9c 87       	std	Y+12, r25	; 0x0c
     e5c:	ad 87       	std	Y+13, r26	; 0x0d
     e5e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e60:	6b 85       	ldd	r22, Y+11	; 0x0b
     e62:	7c 85       	ldd	r23, Y+12	; 0x0c
     e64:	8d 85       	ldd	r24, Y+13	; 0x0d
     e66:	9e 85       	ldd	r25, Y+14	; 0x0e
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	4a e7       	ldi	r20, 0x7A	; 122
     e6e:	53 e4       	ldi	r21, 0x43	; 67
     e70:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e74:	dc 01       	movw	r26, r24
     e76:	cb 01       	movw	r24, r22
     e78:	8f 83       	std	Y+7, r24	; 0x07
     e7a:	98 87       	std	Y+8, r25	; 0x08
     e7c:	a9 87       	std	Y+9, r26	; 0x09
     e7e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e80:	6f 81       	ldd	r22, Y+7	; 0x07
     e82:	78 85       	ldd	r23, Y+8	; 0x08
     e84:	89 85       	ldd	r24, Y+9	; 0x09
     e86:	9a 85       	ldd	r25, Y+10	; 0x0a
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	40 e8       	ldi	r20, 0x80	; 128
     e8e:	5f e3       	ldi	r21, 0x3F	; 63
     e90:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     e94:	88 23       	and	r24, r24
     e96:	2c f4       	brge	.+10     	; 0xea2 <LCD_EN_Pluse+0x74>
		__ticks = 1;
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	9e 83       	std	Y+6, r25	; 0x06
     e9e:	8d 83       	std	Y+5, r24	; 0x05
     ea0:	3f c0       	rjmp	.+126    	; 0xf20 <LCD_EN_Pluse+0xf2>
	else if (__tmp > 65535)
     ea2:	6f 81       	ldd	r22, Y+7	; 0x07
     ea4:	78 85       	ldd	r23, Y+8	; 0x08
     ea6:	89 85       	ldd	r24, Y+9	; 0x09
     ea8:	9a 85       	ldd	r25, Y+10	; 0x0a
     eaa:	20 e0       	ldi	r18, 0x00	; 0
     eac:	3f ef       	ldi	r19, 0xFF	; 255
     eae:	4f e7       	ldi	r20, 0x7F	; 127
     eb0:	57 e4       	ldi	r21, 0x47	; 71
     eb2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     eb6:	18 16       	cp	r1, r24
     eb8:	4c f5       	brge	.+82     	; 0xf0c <LCD_EN_Pluse+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eba:	6b 85       	ldd	r22, Y+11	; 0x0b
     ebc:	7c 85       	ldd	r23, Y+12	; 0x0c
     ebe:	8d 85       	ldd	r24, Y+13	; 0x0d
     ec0:	9e 85       	ldd	r25, Y+14	; 0x0e
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	40 e2       	ldi	r20, 0x20	; 32
     ec8:	51 e4       	ldi	r21, 0x41	; 65
     eca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ece:	dc 01       	movw	r26, r24
     ed0:	cb 01       	movw	r24, r22
     ed2:	bc 01       	movw	r22, r24
     ed4:	cd 01       	movw	r24, r26
     ed6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     eda:	dc 01       	movw	r26, r24
     edc:	cb 01       	movw	r24, r22
     ede:	9e 83       	std	Y+6, r25	; 0x06
     ee0:	8d 83       	std	Y+5, r24	; 0x05
     ee2:	0f c0       	rjmp	.+30     	; 0xf02 <LCD_EN_Pluse+0xd4>
     ee4:	89 e1       	ldi	r24, 0x19	; 25
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	9c 83       	std	Y+4, r25	; 0x04
     eea:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	9c 81       	ldd	r25, Y+4	; 0x04
     ef0:	01 97       	sbiw	r24, 0x01	; 1
     ef2:	f1 f7       	brne	.-4      	; 0xef0 <LCD_EN_Pluse+0xc2>
     ef4:	9c 83       	std	Y+4, r25	; 0x04
     ef6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ef8:	8d 81       	ldd	r24, Y+5	; 0x05
     efa:	9e 81       	ldd	r25, Y+6	; 0x06
     efc:	01 97       	sbiw	r24, 0x01	; 1
     efe:	9e 83       	std	Y+6, r25	; 0x06
     f00:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f02:	8d 81       	ldd	r24, Y+5	; 0x05
     f04:	9e 81       	ldd	r25, Y+6	; 0x06
     f06:	00 97       	sbiw	r24, 0x00	; 0
     f08:	69 f7       	brne	.-38     	; 0xee4 <LCD_EN_Pluse+0xb6>
     f0a:	14 c0       	rjmp	.+40     	; 0xf34 <LCD_EN_Pluse+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f0c:	6f 81       	ldd	r22, Y+7	; 0x07
     f0e:	78 85       	ldd	r23, Y+8	; 0x08
     f10:	89 85       	ldd	r24, Y+9	; 0x09
     f12:	9a 85       	ldd	r25, Y+10	; 0x0a
     f14:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f18:	dc 01       	movw	r26, r24
     f1a:	cb 01       	movw	r24, r22
     f1c:	9e 83       	std	Y+6, r25	; 0x06
     f1e:	8d 83       	std	Y+5, r24	; 0x05
     f20:	8d 81       	ldd	r24, Y+5	; 0x05
     f22:	9e 81       	ldd	r25, Y+6	; 0x06
     f24:	9a 83       	std	Y+2, r25	; 0x02
     f26:	89 83       	std	Y+1, r24	; 0x01
     f28:	89 81       	ldd	r24, Y+1	; 0x01
     f2a:	9a 81       	ldd	r25, Y+2	; 0x02
     f2c:	01 97       	sbiw	r24, 0x01	; 1
     f2e:	f1 f7       	brne	.-4      	; 0xf2c <LCD_EN_Pluse+0xfe>
     f30:	9a 83       	std	Y+2, r25	; 0x02
     f32:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(50);
	LCD_EN_PORT |= (1<<LCD_EN_PIN);
     f34:	a8 e3       	ldi	r26, 0x38	; 56
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e8 e3       	ldi	r30, 0x38	; 56
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	88 60       	ori	r24, 0x08	; 8
     f40:	8c 93       	st	X, r24
}
     f42:	2e 96       	adiw	r28, 0x0e	; 14
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	f8 94       	cli
     f48:	de bf       	out	0x3e, r29	; 62
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	cd bf       	out	0x3d, r28	; 61
     f4e:	cf 91       	pop	r28
     f50:	df 91       	pop	r29
     f52:	08 95       	ret

00000f54 <LCD_init>:
void LCD_init(void)
{
     f54:	df 93       	push	r29
     f56:	cf 93       	push	r28
     f58:	cd b7       	in	r28, 0x3d	; 61
     f5a:	de b7       	in	r29, 0x3e	; 62
     f5c:	6c 97       	sbiw	r28, 0x1c	; 28
     f5e:	0f b6       	in	r0, 0x3f	; 63
     f60:	f8 94       	cli
     f62:	de bf       	out	0x3e, r29	; 62
     f64:	0f be       	out	0x3f, r0	; 63
     f66:	cd bf       	out	0x3d, r28	; 61
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	a0 ea       	ldi	r26, 0xA0	; 160
     f6e:	b1 e4       	ldi	r27, 0x41	; 65
     f70:	89 8f       	std	Y+25, r24	; 0x19
     f72:	9a 8f       	std	Y+26, r25	; 0x1a
     f74:	ab 8f       	std	Y+27, r26	; 0x1b
     f76:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f78:	69 8d       	ldd	r22, Y+25	; 0x19
     f7a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f7c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f7e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	4a e7       	ldi	r20, 0x7A	; 122
     f86:	53 e4       	ldi	r21, 0x43	; 67
     f88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	8d 8b       	std	Y+21, r24	; 0x15
     f92:	9e 8b       	std	Y+22, r25	; 0x16
     f94:	af 8b       	std	Y+23, r26	; 0x17
     f96:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f98:	6d 89       	ldd	r22, Y+21	; 0x15
     f9a:	7e 89       	ldd	r23, Y+22	; 0x16
     f9c:	8f 89       	ldd	r24, Y+23	; 0x17
     f9e:	98 8d       	ldd	r25, Y+24	; 0x18
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 e8       	ldi	r20, 0x80	; 128
     fa6:	5f e3       	ldi	r21, 0x3F	; 63
     fa8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     fac:	88 23       	and	r24, r24
     fae:	2c f4       	brge	.+10     	; 0xfba <LCD_init+0x66>
		__ticks = 1;
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	9c 8b       	std	Y+20, r25	; 0x14
     fb6:	8b 8b       	std	Y+19, r24	; 0x13
     fb8:	3f c0       	rjmp	.+126    	; 0x1038 <LCD_init+0xe4>
	else if (__tmp > 65535)
     fba:	6d 89       	ldd	r22, Y+21	; 0x15
     fbc:	7e 89       	ldd	r23, Y+22	; 0x16
     fbe:	8f 89       	ldd	r24, Y+23	; 0x17
     fc0:	98 8d       	ldd	r25, Y+24	; 0x18
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	3f ef       	ldi	r19, 0xFF	; 255
     fc6:	4f e7       	ldi	r20, 0x7F	; 127
     fc8:	57 e4       	ldi	r21, 0x47	; 71
     fca:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     fce:	18 16       	cp	r1, r24
     fd0:	4c f5       	brge	.+82     	; 0x1024 <LCD_init+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fd2:	69 8d       	ldd	r22, Y+25	; 0x19
     fd4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fd6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fd8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fda:	20 e0       	ldi	r18, 0x00	; 0
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	40 e2       	ldi	r20, 0x20	; 32
     fe0:	51 e4       	ldi	r21, 0x41	; 65
     fe2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fe6:	dc 01       	movw	r26, r24
     fe8:	cb 01       	movw	r24, r22
     fea:	bc 01       	movw	r22, r24
     fec:	cd 01       	movw	r24, r26
     fee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ff2:	dc 01       	movw	r26, r24
     ff4:	cb 01       	movw	r24, r22
     ff6:	9c 8b       	std	Y+20, r25	; 0x14
     ff8:	8b 8b       	std	Y+19, r24	; 0x13
     ffa:	0f c0       	rjmp	.+30     	; 0x101a <LCD_init+0xc6>
     ffc:	89 e1       	ldi	r24, 0x19	; 25
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	9a 8b       	std	Y+18, r25	; 0x12
    1002:	89 8b       	std	Y+17, r24	; 0x11
    1004:	89 89       	ldd	r24, Y+17	; 0x11
    1006:	9a 89       	ldd	r25, Y+18	; 0x12
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	f1 f7       	brne	.-4      	; 0x1008 <LCD_init+0xb4>
    100c:	9a 8b       	std	Y+18, r25	; 0x12
    100e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1010:	8b 89       	ldd	r24, Y+19	; 0x13
    1012:	9c 89       	ldd	r25, Y+20	; 0x14
    1014:	01 97       	sbiw	r24, 0x01	; 1
    1016:	9c 8b       	std	Y+20, r25	; 0x14
    1018:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    101a:	8b 89       	ldd	r24, Y+19	; 0x13
    101c:	9c 89       	ldd	r25, Y+20	; 0x14
    101e:	00 97       	sbiw	r24, 0x00	; 0
    1020:	69 f7       	brne	.-38     	; 0xffc <LCD_init+0xa8>
    1022:	14 c0       	rjmp	.+40     	; 0x104c <LCD_init+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1024:	6d 89       	ldd	r22, Y+21	; 0x15
    1026:	7e 89       	ldd	r23, Y+22	; 0x16
    1028:	8f 89       	ldd	r24, Y+23	; 0x17
    102a:	98 8d       	ldd	r25, Y+24	; 0x18
    102c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1030:	dc 01       	movw	r26, r24
    1032:	cb 01       	movw	r24, r22
    1034:	9c 8b       	std	Y+20, r25	; 0x14
    1036:	8b 8b       	std	Y+19, r24	; 0x13
    1038:	8b 89       	ldd	r24, Y+19	; 0x13
    103a:	9c 89       	ldd	r25, Y+20	; 0x14
    103c:	98 8b       	std	Y+16, r25	; 0x10
    103e:	8f 87       	std	Y+15, r24	; 0x0f
    1040:	8f 85       	ldd	r24, Y+15	; 0x0f
    1042:	98 89       	ldd	r25, Y+16	; 0x10
    1044:	01 97       	sbiw	r24, 0x01	; 1
    1046:	f1 f7       	brne	.-4      	; 0x1044 <LCD_init+0xf0>
    1048:	98 8b       	std	Y+16, r25	; 0x10
    104a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(20);

	// Set LCD Data Port output
	LCD_DATA_DIR_PORT = 0xff ;
    104c:	ea e3       	ldi	r30, 0x3A	; 58
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	8f ef       	ldi	r24, 0xFF	; 255
    1052:	80 83       	st	Z, r24
	// SET control pins output
	LCD_RS_DIR_PORT |=(1<<LCD_RS_PIN);
    1054:	a7 e3       	ldi	r26, 0x37	; 55
    1056:	b0 e0       	ldi	r27, 0x00	; 0
    1058:	e7 e3       	ldi	r30, 0x37	; 55
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	80 81       	ld	r24, Z
    105e:	82 60       	ori	r24, 0x02	; 2
    1060:	8c 93       	st	X, r24
	LCD_RW_DIR_PORT |=(1<<LCD_RW_PIN);
    1062:	a7 e3       	ldi	r26, 0x37	; 55
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e7 e3       	ldi	r30, 0x37	; 55
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	84 60       	ori	r24, 0x04	; 4
    106e:	8c 93       	st	X, r24
	LCD_EN_DIR_PORT |=(1<<LCD_EN_PIN);
    1070:	a7 e3       	ldi	r26, 0x37	; 55
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	e7 e3       	ldi	r30, 0x37	; 55
    1076:	f0 e0       	ldi	r31, 0x00	; 0
    1078:	80 81       	ld	r24, Z
    107a:	88 60       	ori	r24, 0x08	; 8
    107c:	8c 93       	st	X, r24

	//put the LCD in command mode (RS off)
	LCD_RS_PORT &= ~(1<<LCD_RS_PIN);
    107e:	a8 e3       	ldi	r26, 0x38	; 56
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	e8 e3       	ldi	r30, 0x38	; 56
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	8d 7f       	andi	r24, 0xFD	; 253
    108a:	8c 93       	st	X, r24

	// put the LCD in write mode (RW off)
	LCD_RW_PORT &= ~(1<<LCD_RW_PIN);
    108c:	a8 e3       	ldi	r26, 0x38	; 56
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	e8 e3       	ldi	r30, 0x38	; 56
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	8b 7f       	andi	r24, 0xFB	; 251
    1098:	8c 93       	st	X, r24

	// EN off
	LCD_EN_PORT &= ~(1<<LCD_EN_PIN);
    109a:	a8 e3       	ldi	r26, 0x38	; 56
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	e8 e3       	ldi	r30, 0x38	; 56
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	80 81       	ld	r24, Z
    10a4:	87 7f       	andi	r24, 0xF7	; 247
    10a6:	8c 93       	st	X, r24
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	a0 e7       	ldi	r26, 0x70	; 112
    10ae:	b1 e4       	ldi	r27, 0x41	; 65
    10b0:	8b 87       	std	Y+11, r24	; 0x0b
    10b2:	9c 87       	std	Y+12, r25	; 0x0c
    10b4:	ad 87       	std	Y+13, r26	; 0x0d
    10b6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b8:	6b 85       	ldd	r22, Y+11	; 0x0b
    10ba:	7c 85       	ldd	r23, Y+12	; 0x0c
    10bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    10be:	9e 85       	ldd	r25, Y+14	; 0x0e
    10c0:	20 e0       	ldi	r18, 0x00	; 0
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	4a e7       	ldi	r20, 0x7A	; 122
    10c6:	53 e4       	ldi	r21, 0x43	; 67
    10c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10cc:	dc 01       	movw	r26, r24
    10ce:	cb 01       	movw	r24, r22
    10d0:	8f 83       	std	Y+7, r24	; 0x07
    10d2:	98 87       	std	Y+8, r25	; 0x08
    10d4:	a9 87       	std	Y+9, r26	; 0x09
    10d6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    10d8:	6f 81       	ldd	r22, Y+7	; 0x07
    10da:	78 85       	ldd	r23, Y+8	; 0x08
    10dc:	89 85       	ldd	r24, Y+9	; 0x09
    10de:	9a 85       	ldd	r25, Y+10	; 0x0a
    10e0:	20 e0       	ldi	r18, 0x00	; 0
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	40 e8       	ldi	r20, 0x80	; 128
    10e6:	5f e3       	ldi	r21, 0x3F	; 63
    10e8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    10ec:	88 23       	and	r24, r24
    10ee:	2c f4       	brge	.+10     	; 0x10fa <LCD_init+0x1a6>
		__ticks = 1;
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	9e 83       	std	Y+6, r25	; 0x06
    10f6:	8d 83       	std	Y+5, r24	; 0x05
    10f8:	3f c0       	rjmp	.+126    	; 0x1178 <LCD_init+0x224>
	else if (__tmp > 65535)
    10fa:	6f 81       	ldd	r22, Y+7	; 0x07
    10fc:	78 85       	ldd	r23, Y+8	; 0x08
    10fe:	89 85       	ldd	r24, Y+9	; 0x09
    1100:	9a 85       	ldd	r25, Y+10	; 0x0a
    1102:	20 e0       	ldi	r18, 0x00	; 0
    1104:	3f ef       	ldi	r19, 0xFF	; 255
    1106:	4f e7       	ldi	r20, 0x7F	; 127
    1108:	57 e4       	ldi	r21, 0x47	; 71
    110a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    110e:	18 16       	cp	r1, r24
    1110:	4c f5       	brge	.+82     	; 0x1164 <LCD_init+0x210>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1112:	6b 85       	ldd	r22, Y+11	; 0x0b
    1114:	7c 85       	ldd	r23, Y+12	; 0x0c
    1116:	8d 85       	ldd	r24, Y+13	; 0x0d
    1118:	9e 85       	ldd	r25, Y+14	; 0x0e
    111a:	20 e0       	ldi	r18, 0x00	; 0
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	40 e2       	ldi	r20, 0x20	; 32
    1120:	51 e4       	ldi	r21, 0x41	; 65
    1122:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1126:	dc 01       	movw	r26, r24
    1128:	cb 01       	movw	r24, r22
    112a:	bc 01       	movw	r22, r24
    112c:	cd 01       	movw	r24, r26
    112e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1132:	dc 01       	movw	r26, r24
    1134:	cb 01       	movw	r24, r22
    1136:	9e 83       	std	Y+6, r25	; 0x06
    1138:	8d 83       	std	Y+5, r24	; 0x05
    113a:	0f c0       	rjmp	.+30     	; 0x115a <LCD_init+0x206>
    113c:	89 e1       	ldi	r24, 0x19	; 25
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	9c 83       	std	Y+4, r25	; 0x04
    1142:	8b 83       	std	Y+3, r24	; 0x03
    1144:	8b 81       	ldd	r24, Y+3	; 0x03
    1146:	9c 81       	ldd	r25, Y+4	; 0x04
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	f1 f7       	brne	.-4      	; 0x1148 <LCD_init+0x1f4>
    114c:	9c 83       	std	Y+4, r25	; 0x04
    114e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1150:	8d 81       	ldd	r24, Y+5	; 0x05
    1152:	9e 81       	ldd	r25, Y+6	; 0x06
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	9e 83       	std	Y+6, r25	; 0x06
    1158:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    115a:	8d 81       	ldd	r24, Y+5	; 0x05
    115c:	9e 81       	ldd	r25, Y+6	; 0x06
    115e:	00 97       	sbiw	r24, 0x00	; 0
    1160:	69 f7       	brne	.-38     	; 0x113c <LCD_init+0x1e8>
    1162:	14 c0       	rjmp	.+40     	; 0x118c <LCD_init+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1164:	6f 81       	ldd	r22, Y+7	; 0x07
    1166:	78 85       	ldd	r23, Y+8	; 0x08
    1168:	89 85       	ldd	r24, Y+9	; 0x09
    116a:	9a 85       	ldd	r25, Y+10	; 0x0a
    116c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1170:	dc 01       	movw	r26, r24
    1172:	cb 01       	movw	r24, r22
    1174:	9e 83       	std	Y+6, r25	; 0x06
    1176:	8d 83       	std	Y+5, r24	; 0x05
    1178:	8d 81       	ldd	r24, Y+5	; 0x05
    117a:	9e 81       	ldd	r25, Y+6	; 0x06
    117c:	9a 83       	std	Y+2, r25	; 0x02
    117e:	89 83       	std	Y+1, r24	; 0x01
    1180:	89 81       	ldd	r24, Y+1	; 0x01
    1182:	9a 81       	ldd	r25, Y+2	; 0x02
    1184:	01 97       	sbiw	r24, 0x01	; 1
    1186:	f1 f7       	brne	.-4      	; 0x1184 <LCD_init+0x230>
    1188:	9a 83       	std	Y+2, r25	; 0x02
    118a:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(15);
	LCD_Clear_Screen();
    118c:	0e 94 b7 09 	call	0x136e	; 0x136e <LCD_Clear_Screen>
	LCD_Send_Command(LCD_FUNCTION_8BIT_2LINE);

	/*4_BIT_MODE_INIT*/
#elif LCD_MODE == LCD_4_BIT_MODE

	LCD_Send_Command(0x02);
    1190:	82 e0       	ldi	r24, 0x02	; 2
    1192:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
	LCD_Send_Command(LCD_FUNCTION_4BIT_2LINE);
    1196:	88 e2       	ldi	r24, 0x28	; 40
    1198:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>

#endif


	LCD_Send_Command(LCD_ENTRY_MODE);
    119c:	86 e0       	ldi	r24, 0x06	; 6
    119e:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
	LCD_Send_Command(LCD_BEGIN_AT_FIRST_RAW);
    11a2:	80 e8       	ldi	r24, 0x80	; 128
    11a4:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
	LCD_Send_Command(LCD_DISP_ON_CURSOR_BLINK);
    11a8:	8f e0       	ldi	r24, 0x0F	; 15
    11aa:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>

}
    11ae:	6c 96       	adiw	r28, 0x1c	; 28
    11b0:	0f b6       	in	r0, 0x3f	; 63
    11b2:	f8 94       	cli
    11b4:	de bf       	out	0x3e, r29	; 62
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	cd bf       	out	0x3d, r28	; 61
    11ba:	cf 91       	pop	r28
    11bc:	df 91       	pop	r29
    11be:	08 95       	ret

000011c0 <LCD_Is_Busy>:
void LCD_Is_Busy(void)
{
    11c0:	df 93       	push	r29
    11c2:	cf 93       	push	r28
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
	// set pin connected to D7 to receive data (Data direction as input).
	LCD_DATA_DIR_PORT &= ~(1<<LCD_D7_PIN);
    11c8:	aa e3       	ldi	r26, 0x3A	; 58
    11ca:	b0 e0       	ldi	r27, 0x00	; 0
    11cc:	ea e3       	ldi	r30, 0x3A	; 58
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	80 81       	ld	r24, Z
    11d2:	8f 77       	andi	r24, 0x7F	; 127
    11d4:	8c 93       	st	X, r24

	// put the LCD in read mode (RW on)
	LCD_RW_PORT |= (1<<LCD_RW_PIN);
    11d6:	a8 e3       	ldi	r26, 0x38	; 56
    11d8:	b0 e0       	ldi	r27, 0x00	; 0
    11da:	e8 e3       	ldi	r30, 0x38	; 56
    11dc:	f0 e0       	ldi	r31, 0x00	; 0
    11de:	80 81       	ld	r24, Z
    11e0:	84 60       	ori	r24, 0x04	; 4
    11e2:	8c 93       	st	X, r24

	//put the LCD in command mode (RS off)
	LCD_RS_PORT &= ~(1<<LCD_RS_PIN);
    11e4:	a8 e3       	ldi	r26, 0x38	; 56
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	e8 e3       	ldi	r30, 0x38	; 56
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	80 81       	ld	r24, Z
    11ee:	8d 7f       	andi	r24, 0xFD	; 253
    11f0:	8c 93       	st	X, r24

	while (((LCD_DATA_INP_PORT>>LCD_D7_PIN)&1));
    11f2:	ea e3       	ldi	r30, 0x3A	; 58
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	80 81       	ld	r24, Z
    11f8:	88 23       	and	r24, r24
    11fa:	dc f3       	brlt	.-10     	; 0x11f2 <LCD_Is_Busy+0x32>

	// set  D7 to receive data (Data direction as output).
	LCD_DATA_DIR_PORT |= (1<<LCD_D7_PIN);
    11fc:	aa e3       	ldi	r26, 0x3A	; 58
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	ea e3       	ldi	r30, 0x3A	; 58
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	80 68       	ori	r24, 0x80	; 128
    1208:	8c 93       	st	X, r24

	// put the LCD in write mode (RW off)
	LCD_RW_PORT &= ~(1<<LCD_RW_PIN);
    120a:	a8 e3       	ldi	r26, 0x38	; 56
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	e8 e3       	ldi	r30, 0x38	; 56
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	80 81       	ld	r24, Z
    1214:	8b 7f       	andi	r24, 0xFB	; 251
    1216:	8c 93       	st	X, r24

}
    1218:	cf 91       	pop	r28
    121a:	df 91       	pop	r29
    121c:	08 95       	ret

0000121e <LCD_Send_Command>:
void LCD_Send_Command(uint8 command)
{
    121e:	df 93       	push	r29
    1220:	cf 93       	push	r28
    1222:	0f 92       	push	r0
    1224:	cd b7       	in	r28, 0x3d	; 61
    1226:	de b7       	in	r29, 0x3e	; 62
    1228:	89 83       	std	Y+1, r24	; 0x01
	// Check if LCD is busy
	LCD_Is_Busy();
    122a:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <LCD_Is_Busy>

	//put the LCD in command mode (RS off)
	LCD_RS_PORT &= ~(1<<LCD_RS_PIN);
    122e:	a8 e3       	ldi	r26, 0x38	; 56
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	e8 e3       	ldi	r30, 0x38	; 56
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	80 81       	ld	r24, Z
    1238:	8d 7f       	andi	r24, 0xFD	; 253
    123a:	8c 93       	st	X, r24

	// put the LCD in write mode (RW off)
	LCD_RW_PORT &= ~(1<<LCD_RW_PIN);
    123c:	a8 e3       	ldi	r26, 0x38	; 56
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	e8 e3       	ldi	r30, 0x38	; 56
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	80 81       	ld	r24, Z
    1246:	8b 7f       	andi	r24, 0xFB	; 251
    1248:	8c 93       	st	X, r24
	LCD_EN_Pluse();

#elif LCD_MODE == LCD_4_BIT_MODE

	// Write The Most 4 bits Of command on Data Pins
	LCD_DATA_OUT_PORT = (LCD_DATA_OUT_PORT & 0x0f)|(command & 0xf0);
    124a:	ab e3       	ldi	r26, 0x3B	; 59
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	eb e3       	ldi	r30, 0x3B	; 59
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	80 81       	ld	r24, Z
    1254:	98 2f       	mov	r25, r24
    1256:	9f 70       	andi	r25, 0x0F	; 15
    1258:	89 81       	ldd	r24, Y+1	; 0x01
    125a:	80 7f       	andi	r24, 0xF0	; 240
    125c:	89 2b       	or	r24, r25
    125e:	8c 93       	st	X, r24
	LCD_EN_Pluse();
    1260:	0e 94 17 07 	call	0xe2e	; 0xe2e <LCD_EN_Pluse>

	// Write The Least 4 bits Of command on Data Pins
	LCD_DATA_OUT_PORT = (LCD_DATA_OUT_PORT & 0x0f)|(command <<4);
    1264:	ab e3       	ldi	r26, 0x3B	; 59
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	eb e3       	ldi	r30, 0x3B	; 59
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	80 81       	ld	r24, Z
    126e:	28 2f       	mov	r18, r24
    1270:	2f 70       	andi	r18, 0x0F	; 15
    1272:	89 81       	ldd	r24, Y+1	; 0x01
    1274:	88 2f       	mov	r24, r24
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	82 95       	swap	r24
    127a:	92 95       	swap	r25
    127c:	90 7f       	andi	r25, 0xF0	; 240
    127e:	98 27       	eor	r25, r24
    1280:	80 7f       	andi	r24, 0xF0	; 240
    1282:	98 27       	eor	r25, r24
    1284:	82 2b       	or	r24, r18
    1286:	8c 93       	st	X, r24
	LCD_EN_Pluse();
    1288:	0e 94 17 07 	call	0xe2e	; 0xe2e <LCD_EN_Pluse>

#endif


}
    128c:	0f 90       	pop	r0
    128e:	cf 91       	pop	r28
    1290:	df 91       	pop	r29
    1292:	08 95       	ret

00001294 <LCD_Send_Character>:
void LCD_Send_Character(uint8 character)
{
    1294:	df 93       	push	r29
    1296:	cf 93       	push	r28
    1298:	0f 92       	push	r0
    129a:	cd b7       	in	r28, 0x3d	; 61
    129c:	de b7       	in	r29, 0x3e	; 62
    129e:	89 83       	std	Y+1, r24	; 0x01
	//put the LCD in Data mode (RS on)
	LCD_RS_PORT |= (1<<LCD_RS_PIN);
    12a0:	a8 e3       	ldi	r26, 0x38	; 56
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	e8 e3       	ldi	r30, 0x38	; 56
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 81       	ld	r24, Z
    12aa:	82 60       	ori	r24, 0x02	; 2
    12ac:	8c 93       	st	X, r24

	// put the LCD in write mode (RW off)
	LCD_RW_PORT &= ~(1<<LCD_RW_PIN);
    12ae:	a8 e3       	ldi	r26, 0x38	; 56
    12b0:	b0 e0       	ldi	r27, 0x00	; 0
    12b2:	e8 e3       	ldi	r30, 0x38	; 56
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	80 81       	ld	r24, Z
    12b8:	8b 7f       	andi	r24, 0xFB	; 251
    12ba:	8c 93       	st	X, r24
	LCD_EN_Pluse();

#elif LCD_MODE == LCD_4_BIT_MODE

	// Write The Most 4 bits Of data on Data Pins
	LCD_DATA_OUT_PORT = (LCD_DATA_OUT_PORT & 0x0f)|(character & 0xf0);
    12bc:	ab e3       	ldi	r26, 0x3B	; 59
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	eb e3       	ldi	r30, 0x3B	; 59
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	80 81       	ld	r24, Z
    12c6:	98 2f       	mov	r25, r24
    12c8:	9f 70       	andi	r25, 0x0F	; 15
    12ca:	89 81       	ldd	r24, Y+1	; 0x01
    12cc:	80 7f       	andi	r24, 0xF0	; 240
    12ce:	89 2b       	or	r24, r25
    12d0:	8c 93       	st	X, r24
	LCD_EN_Pluse();
    12d2:	0e 94 17 07 	call	0xe2e	; 0xe2e <LCD_EN_Pluse>

	// Write The Least 4 bits Of data on Data Pins
	LCD_DATA_OUT_PORT = (LCD_DATA_OUT_PORT & 0x0f)|(character <<4);
    12d6:	ab e3       	ldi	r26, 0x3B	; 59
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	eb e3       	ldi	r30, 0x3B	; 59
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	80 81       	ld	r24, Z
    12e0:	28 2f       	mov	r18, r24
    12e2:	2f 70       	andi	r18, 0x0F	; 15
    12e4:	89 81       	ldd	r24, Y+1	; 0x01
    12e6:	88 2f       	mov	r24, r24
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	82 95       	swap	r24
    12ec:	92 95       	swap	r25
    12ee:	90 7f       	andi	r25, 0xF0	; 240
    12f0:	98 27       	eor	r25, r24
    12f2:	80 7f       	andi	r24, 0xF0	; 240
    12f4:	98 27       	eor	r25, r24
    12f6:	82 2b       	or	r24, r18
    12f8:	8c 93       	st	X, r24
	LCD_EN_Pluse();
    12fa:	0e 94 17 07 	call	0xe2e	; 0xe2e <LCD_EN_Pluse>

#endif

}
    12fe:	0f 90       	pop	r0
    1300:	cf 91       	pop	r28
    1302:	df 91       	pop	r29
    1304:	08 95       	ret

00001306 <LCD_Send_string>:
void LCD_Send_string(uint8* string)
{
    1306:	df 93       	push	r29
    1308:	cf 93       	push	r28
    130a:	00 d0       	rcall	.+0      	; 0x130c <LCD_Send_string+0x6>
    130c:	0f 92       	push	r0
    130e:	cd b7       	in	r28, 0x3d	; 61
    1310:	de b7       	in	r29, 0x3e	; 62
    1312:	9b 83       	std	Y+3, r25	; 0x03
    1314:	8a 83       	std	Y+2, r24	; 0x02
	uint8 counter = 0;
    1316:	19 82       	std	Y+1, r1	; 0x01
    1318:	1f c0       	rjmp	.+62     	; 0x1358 <LCD_Send_string+0x52>
	while( *string >0)
	{
		counter++;
    131a:	89 81       	ldd	r24, Y+1	; 0x01
    131c:	8f 5f       	subi	r24, 0xFF	; 255
    131e:	89 83       	std	Y+1, r24	; 0x01
		LCD_Send_Character(*string);
    1320:	ea 81       	ldd	r30, Y+2	; 0x02
    1322:	fb 81       	ldd	r31, Y+3	; 0x03
    1324:	80 81       	ld	r24, Z
    1326:	0e 94 4a 09 	call	0x1294	; 0x1294 <LCD_Send_Character>
		string++;
    132a:	8a 81       	ldd	r24, Y+2	; 0x02
    132c:	9b 81       	ldd	r25, Y+3	; 0x03
    132e:	01 96       	adiw	r24, 0x01	; 1
    1330:	9b 83       	std	Y+3, r25	; 0x03
    1332:	8a 83       	std	Y+2, r24	; 0x02

		if(counter == 16)
    1334:	89 81       	ldd	r24, Y+1	; 0x01
    1336:	80 31       	cpi	r24, 0x10	; 16
    1338:	29 f4       	brne	.+10     	; 0x1344 <LCD_Send_string+0x3e>
		{
			LCD_SET_Cursor(2, 0);
    133a:	82 e0       	ldi	r24, 0x02	; 2
    133c:	60 e0       	ldi	r22, 0x00	; 0
    133e:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD_SET_Cursor>
    1342:	0a c0       	rjmp	.+20     	; 0x1358 <LCD_Send_string+0x52>
		}
		else if(counter == 32)
    1344:	89 81       	ldd	r24, Y+1	; 0x01
    1346:	80 32       	cpi	r24, 0x20	; 32
    1348:	39 f4       	brne	.+14     	; 0x1358 <LCD_Send_string+0x52>
		{
			LCD_Clear_Screen();
    134a:	0e 94 b7 09 	call	0x136e	; 0x136e <LCD_Clear_Screen>
			LCD_SET_Cursor(1, 0);
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	60 e0       	ldi	r22, 0x00	; 0
    1352:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD_SET_Cursor>
			counter =0 ;
    1356:	19 82       	std	Y+1, r1	; 0x01

}
void LCD_Send_string(uint8* string)
{
	uint8 counter = 0;
	while( *string >0)
    1358:	ea 81       	ldd	r30, Y+2	; 0x02
    135a:	fb 81       	ldd	r31, Y+3	; 0x03
    135c:	80 81       	ld	r24, Z
    135e:	88 23       	and	r24, r24
    1360:	e1 f6       	brne	.-72     	; 0x131a <LCD_Send_string+0x14>
			LCD_Clear_Screen();
			LCD_SET_Cursor(1, 0);
			counter =0 ;
		}
	}
}
    1362:	0f 90       	pop	r0
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	cf 91       	pop	r28
    136a:	df 91       	pop	r29
    136c:	08 95       	ret

0000136e <LCD_Clear_Screen>:
void LCD_Clear_Screen(void)
{
    136e:	df 93       	push	r29
    1370:	cf 93       	push	r28
    1372:	cd b7       	in	r28, 0x3d	; 61
    1374:	de b7       	in	r29, 0x3e	; 62
	LCD_Send_Command(LCD_CLEAR_SCREEN);
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
}
    137c:	cf 91       	pop	r28
    137e:	df 91       	pop	r29
    1380:	08 95       	ret

00001382 <LCD_SET_Cursor>:
void LCD_SET_Cursor(uint8 line , uint8 position )
{
    1382:	df 93       	push	r29
    1384:	cf 93       	push	r28
    1386:	00 d0       	rcall	.+0      	; 0x1388 <LCD_SET_Cursor+0x6>
    1388:	cd b7       	in	r28, 0x3d	; 61
    138a:	de b7       	in	r29, 0x3e	; 62
    138c:	89 83       	std	Y+1, r24	; 0x01
    138e:	6a 83       	std	Y+2, r22	; 0x02
	if (line == 1)
    1390:	89 81       	ldd	r24, Y+1	; 0x01
    1392:	81 30       	cpi	r24, 0x01	; 1
    1394:	41 f4       	brne	.+16     	; 0x13a6 <LCD_SET_Cursor+0x24>
	{
		if(position<16)
    1396:	8a 81       	ldd	r24, Y+2	; 0x02
    1398:	80 31       	cpi	r24, 0x10	; 16
    139a:	78 f4       	brcc	.+30     	; 0x13ba <LCD_SET_Cursor+0x38>
		LCD_Send_Command(LCD_BEGIN_AT_FIRST_RAW + position);
    139c:	8a 81       	ldd	r24, Y+2	; 0x02
    139e:	80 58       	subi	r24, 0x80	; 128
    13a0:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
    13a4:	0a c0       	rjmp	.+20     	; 0x13ba <LCD_SET_Cursor+0x38>
	}
	else if (line == 2)
    13a6:	89 81       	ldd	r24, Y+1	; 0x01
    13a8:	82 30       	cpi	r24, 0x02	; 2
    13aa:	39 f4       	brne	.+14     	; 0x13ba <LCD_SET_Cursor+0x38>
	{
		if(position<16)
    13ac:	8a 81       	ldd	r24, Y+2	; 0x02
    13ae:	80 31       	cpi	r24, 0x10	; 16
    13b0:	20 f4       	brcc	.+8      	; 0x13ba <LCD_SET_Cursor+0x38>
		LCD_Send_Command(LCD_BEGIN_AT_SECOND_RAW + position);
    13b2:	8a 81       	ldd	r24, Y+2	; 0x02
    13b4:	80 54       	subi	r24, 0x40	; 64
    13b6:	0e 94 0f 09 	call	0x121e	; 0x121e <LCD_Send_Command>
	}
}
    13ba:	0f 90       	pop	r0
    13bc:	0f 90       	pop	r0
    13be:	cf 91       	pop	r28
    13c0:	df 91       	pop	r29
    13c2:	08 95       	ret

000013c4 <LCD_Display_Number>:
void LCD_Display_Number(uint32 number)
{
    13c4:	df 93       	push	r29
    13c6:	cf 93       	push	r28
    13c8:	cd b7       	in	r28, 0x3d	; 61
    13ca:	de b7       	in	r29, 0x3e	; 62
    13cc:	29 97       	sbiw	r28, 0x09	; 9
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	f8 94       	cli
    13d2:	de bf       	out	0x3e, r29	; 62
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	cd bf       	out	0x3d, r28	; 61
    13d8:	99 87       	std	Y+9, r25	; 0x09
    13da:	88 87       	std	Y+8, r24	; 0x08
	uint8 str[7];
	sprintf(str,"%d",number);
    13dc:	00 d0       	rcall	.+0      	; 0x13de <LCD_Display_Number+0x1a>
    13de:	00 d0       	rcall	.+0      	; 0x13e0 <LCD_Display_Number+0x1c>
    13e0:	00 d0       	rcall	.+0      	; 0x13e2 <LCD_Display_Number+0x1e>
    13e2:	ed b7       	in	r30, 0x3d	; 61
    13e4:	fe b7       	in	r31, 0x3e	; 62
    13e6:	31 96       	adiw	r30, 0x01	; 1
    13e8:	ce 01       	movw	r24, r28
    13ea:	01 96       	adiw	r24, 0x01	; 1
    13ec:	91 83       	std	Z+1, r25	; 0x01
    13ee:	80 83       	st	Z, r24
    13f0:	80 e6       	ldi	r24, 0x60	; 96
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	93 83       	std	Z+3, r25	; 0x03
    13f6:	82 83       	std	Z+2, r24	; 0x02
    13f8:	88 85       	ldd	r24, Y+8	; 0x08
    13fa:	99 85       	ldd	r25, Y+9	; 0x09
    13fc:	95 83       	std	Z+5, r25	; 0x05
    13fe:	84 83       	std	Z+4, r24	; 0x04
    1400:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <sprintf>
    1404:	8d b7       	in	r24, 0x3d	; 61
    1406:	9e b7       	in	r25, 0x3e	; 62
    1408:	06 96       	adiw	r24, 0x06	; 6
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	9e bf       	out	0x3e, r25	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	8d bf       	out	0x3d, r24	; 61
	LCD_Send_string(str);
    1414:	ce 01       	movw	r24, r28
    1416:	01 96       	adiw	r24, 0x01	; 1
    1418:	0e 94 83 09 	call	0x1306	; 0x1306 <LCD_Send_string>
}
    141c:	29 96       	adiw	r28, 0x09	; 9
    141e:	0f b6       	in	r0, 0x3f	; 63
    1420:	f8 94       	cli
    1422:	de bf       	out	0x3e, r29	; 62
    1424:	0f be       	out	0x3f, r0	; 63
    1426:	cd bf       	out	0x3d, r28	; 61
    1428:	cf 91       	pop	r28
    142a:	df 91       	pop	r29
    142c:	08 95       	ret

0000142e <LCD_Display_Real_Number>:
void LCD_Display_Real_Number(double number)
{
    142e:	df 93       	push	r29
    1430:	cf 93       	push	r28
    1432:	cd b7       	in	r28, 0x3d	; 61
    1434:	de b7       	in	r29, 0x3e	; 62
    1436:	a2 97       	sbiw	r28, 0x22	; 34
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	f8 94       	cli
    143c:	de bf       	out	0x3e, r29	; 62
    143e:	0f be       	out	0x3f, r0	; 63
    1440:	cd bf       	out	0x3d, r28	; 61
    1442:	6a 8f       	std	Y+26, r22	; 0x1a
    1444:	7b 8f       	std	Y+27, r23	; 0x1b
    1446:	8c 8f       	std	Y+28, r24	; 0x1c
    1448:	9d 8f       	std	Y+29, r25	; 0x1d
	uint8 str[16];

	uint8 sign = (number<0)? "-":"";
    144a:	6a 8d       	ldd	r22, Y+26	; 0x1a
    144c:	7b 8d       	ldd	r23, Y+27	; 0x1b
    144e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1450:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	40 e0       	ldi	r20, 0x00	; 0
    1458:	50 e0       	ldi	r21, 0x00	; 0
    145a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    145e:	88 23       	and	r24, r24
    1460:	24 f4       	brge	.+8      	; 0x146a <LCD_Display_Real_Number+0x3c>
    1462:	83 e6       	ldi	r24, 0x63	; 99
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	8a a3       	std	Y+34, r24	; 0x22
    1468:	03 c0       	rjmp	.+6      	; 0x1470 <LCD_Display_Real_Number+0x42>
    146a:	85 e6       	ldi	r24, 0x65	; 101
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	8a a3       	std	Y+34, r24	; 0x22
    1470:	2a a1       	ldd	r18, Y+34	; 0x22
    1472:	29 87       	std	Y+9, r18	; 0x09
	float Temp = (number<0)? -number:number;
    1474:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1476:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1478:	8c 8d       	ldd	r24, Y+28	; 0x1c
    147a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	40 e0       	ldi	r20, 0x00	; 0
    1482:	50 e0       	ldi	r21, 0x00	; 0
    1484:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1488:	88 23       	and	r24, r24
    148a:	64 f4       	brge	.+24     	; 0x14a4 <LCD_Display_Real_Number+0x76>
    148c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    148e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1490:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1492:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1494:	9c 01       	movw	r18, r24
    1496:	ad 01       	movw	r20, r26
    1498:	50 58       	subi	r21, 0x80	; 128
    149a:	2e 8f       	std	Y+30, r18	; 0x1e
    149c:	3f 8f       	std	Y+31, r19	; 0x1f
    149e:	48 a3       	std	Y+32, r20	; 0x20
    14a0:	59 a3       	std	Y+33, r21	; 0x21
    14a2:	08 c0       	rjmp	.+16     	; 0x14b4 <LCD_Display_Real_Number+0x86>
    14a4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    14a6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    14a8:	ac 8d       	ldd	r26, Y+28	; 0x1c
    14aa:	bd 8d       	ldd	r27, Y+29	; 0x1d
    14ac:	8e 8f       	std	Y+30, r24	; 0x1e
    14ae:	9f 8f       	std	Y+31, r25	; 0x1f
    14b0:	a8 a3       	std	Y+32, r26	; 0x20
    14b2:	b9 a3       	std	Y+33, r27	; 0x21
    14b4:	2e 8d       	ldd	r18, Y+30	; 0x1e
    14b6:	3f 8d       	ldd	r19, Y+31	; 0x1f
    14b8:	48 a1       	ldd	r20, Y+32	; 0x20
    14ba:	59 a1       	ldd	r21, Y+33	; 0x21
    14bc:	2d 83       	std	Y+5, r18	; 0x05
    14be:	3e 83       	std	Y+6, r19	; 0x06
    14c0:	4f 83       	std	Y+7, r20	; 0x07
    14c2:	58 87       	std	Y+8, r21	; 0x08

	uint32 temp1 = Temp;
    14c4:	6d 81       	ldd	r22, Y+5	; 0x05
    14c6:	7e 81       	ldd	r23, Y+6	; 0x06
    14c8:	8f 81       	ldd	r24, Y+7	; 0x07
    14ca:	98 85       	ldd	r25, Y+8	; 0x08
    14cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	9c 83       	std	Y+4, r25	; 0x04
    14d6:	8b 83       	std	Y+3, r24	; 0x03
	uint32 temp2 = (Temp - temp1) *10000 ;
    14d8:	8b 81       	ldd	r24, Y+3	; 0x03
    14da:	9c 81       	ldd	r25, Y+4	; 0x04
    14dc:	cc 01       	movw	r24, r24
    14de:	a0 e0       	ldi	r26, 0x00	; 0
    14e0:	b0 e0       	ldi	r27, 0x00	; 0
    14e2:	bc 01       	movw	r22, r24
    14e4:	cd 01       	movw	r24, r26
    14e6:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    14ea:	9b 01       	movw	r18, r22
    14ec:	ac 01       	movw	r20, r24
    14ee:	6d 81       	ldd	r22, Y+5	; 0x05
    14f0:	7e 81       	ldd	r23, Y+6	; 0x06
    14f2:	8f 81       	ldd	r24, Y+7	; 0x07
    14f4:	98 85       	ldd	r25, Y+8	; 0x08
    14f6:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    14fa:	dc 01       	movw	r26, r24
    14fc:	cb 01       	movw	r24, r22
    14fe:	bc 01       	movw	r22, r24
    1500:	cd 01       	movw	r24, r26
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	30 e4       	ldi	r19, 0x40	; 64
    1506:	4c e1       	ldi	r20, 0x1C	; 28
    1508:	56 e4       	ldi	r21, 0x46	; 70
    150a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    150e:	dc 01       	movw	r26, r24
    1510:	cb 01       	movw	r24, r22
    1512:	bc 01       	movw	r22, r24
    1514:	cd 01       	movw	r24, r26
    1516:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    151a:	dc 01       	movw	r26, r24
    151c:	cb 01       	movw	r24, r22
    151e:	9a 83       	std	Y+2, r25	; 0x02
    1520:	89 83       	std	Y+1, r24	; 0x01
	sprintf(str,"%s%d.%04d",sign , temp1, temp2);
    1522:	89 85       	ldd	r24, Y+9	; 0x09
    1524:	28 2f       	mov	r18, r24
    1526:	30 e0       	ldi	r19, 0x00	; 0
    1528:	4d b7       	in	r20, 0x3d	; 61
    152a:	5e b7       	in	r21, 0x3e	; 62
    152c:	4a 50       	subi	r20, 0x0A	; 10
    152e:	50 40       	sbci	r21, 0x00	; 0
    1530:	0f b6       	in	r0, 0x3f	; 63
    1532:	f8 94       	cli
    1534:	5e bf       	out	0x3e, r21	; 62
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	4d bf       	out	0x3d, r20	; 61
    153a:	ed b7       	in	r30, 0x3d	; 61
    153c:	fe b7       	in	r31, 0x3e	; 62
    153e:	31 96       	adiw	r30, 0x01	; 1
    1540:	ce 01       	movw	r24, r28
    1542:	0a 96       	adiw	r24, 0x0a	; 10
    1544:	91 83       	std	Z+1, r25	; 0x01
    1546:	80 83       	st	Z, r24
    1548:	86 e6       	ldi	r24, 0x66	; 102
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	93 83       	std	Z+3, r25	; 0x03
    154e:	82 83       	std	Z+2, r24	; 0x02
    1550:	35 83       	std	Z+5, r19	; 0x05
    1552:	24 83       	std	Z+4, r18	; 0x04
    1554:	8b 81       	ldd	r24, Y+3	; 0x03
    1556:	9c 81       	ldd	r25, Y+4	; 0x04
    1558:	97 83       	std	Z+7, r25	; 0x07
    155a:	86 83       	std	Z+6, r24	; 0x06
    155c:	89 81       	ldd	r24, Y+1	; 0x01
    155e:	9a 81       	ldd	r25, Y+2	; 0x02
    1560:	91 87       	std	Z+9, r25	; 0x09
    1562:	80 87       	std	Z+8, r24	; 0x08
    1564:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <sprintf>
    1568:	8d b7       	in	r24, 0x3d	; 61
    156a:	9e b7       	in	r25, 0x3e	; 62
    156c:	0a 96       	adiw	r24, 0x0a	; 10
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	9e bf       	out	0x3e, r25	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	8d bf       	out	0x3d, r24	; 61
	LCD_Send_string(str);
    1578:	ce 01       	movw	r24, r28
    157a:	0a 96       	adiw	r24, 0x0a	; 10
    157c:	0e 94 83 09 	call	0x1306	; 0x1306 <LCD_Send_string>
}
    1580:	a2 96       	adiw	r28, 0x22	; 34
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	cf 91       	pop	r28
    158e:	df 91       	pop	r29
    1590:	08 95       	ret

00001592 <KEYPAD_init>:
uint8 KEYPAD_ROW[KEYPAD_ROWS] = {KEYPAD_R0,KEYPAD_R1,KEYPAD_R2,KEYPAD_R3};
uint8 KEYPAD_COLUM[KEYPAD_COLUMS] = {KEYPAD_C0,KEYPAD_C1,KEYPAD_C2,KEYPAD_C3};
uint8 keys[KEYPAD_ROWS][KEYPAD_COLUMS]= KEYPAD_keys ;

void KEYPAD_init(void)
{
    1592:	df 93       	push	r29
    1594:	cf 93       	push	r28
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
	/* Set the ROWS pins  input */
	KEYPAD_DDR &= ~((1<<KEYPAD_R0)|(1<<KEYPAD_R1)|(1<<KEYPAD_R2)|(1<<KEYPAD_R3));
    159a:	a1 e3       	ldi	r26, 0x31	; 49
    159c:	b0 e0       	ldi	r27, 0x00	; 0
    159e:	e1 e3       	ldi	r30, 0x31	; 49
    15a0:	f0 e0       	ldi	r31, 0x00	; 0
    15a2:	80 81       	ld	r24, Z
    15a4:	80 7f       	andi	r24, 0xF0	; 240
    15a6:	8c 93       	st	X, r24

	/* Set The COLUMS pins Output */
	KEYPAD_DDR |= ((1<<KEYPAD_C0)|(1<<KEYPAD_C1)|(1<<KEYPAD_C2)|(1<<KEYPAD_C3));
    15a8:	a1 e3       	ldi	r26, 0x31	; 49
    15aa:	b0 e0       	ldi	r27, 0x00	; 0
    15ac:	e1 e3       	ldi	r30, 0x31	; 49
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	80 6f       	ori	r24, 0xF0	; 240
    15b4:	8c 93       	st	X, r24

	/* Set the port of data */
	KEYPAD_PORT = 0xff ;
    15b6:	e2 e3       	ldi	r30, 0x32	; 50
    15b8:	f0 e0       	ldi	r31, 0x00	; 0
    15ba:	8f ef       	ldi	r24, 0xFF	; 255
    15bc:	80 83       	st	Z, r24
}
    15be:	cf 91       	pop	r28
    15c0:	df 91       	pop	r29
    15c2:	08 95       	ret

000015c4 <KEYPAD_GetKey>:
char KEYPAD_GetKey(void)
{
    15c4:	df 93       	push	r29
    15c6:	cf 93       	push	r28
    15c8:	00 d0       	rcall	.+0      	; 0x15ca <KEYPAD_GetKey+0x6>
    15ca:	0f 92       	push	r0
    15cc:	cd b7       	in	r28, 0x3d	; 61
    15ce:	de b7       	in	r29, 0x3e	; 62
	uint8 i , j ;

	for (i=0 ; i<KEYPAD_COLUMS ; i++)
    15d0:	1a 82       	std	Y+2, r1	; 0x02
    15d2:	a3 c0       	rjmp	.+326    	; 0x171a <KEYPAD_GetKey+0x156>
	{
		KEYPAD_PORT |= ((1<<KEYPAD_COLUM[0])|(1<<KEYPAD_COLUM[1])|(1<<KEYPAD_COLUM[2])|(1<<KEYPAD_COLUM[3]));
    15d4:	a2 e3       	ldi	r26, 0x32	; 50
    15d6:	b0 e0       	ldi	r27, 0x00	; 0
    15d8:	e2 e3       	ldi	r30, 0x32	; 50
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	80 81       	ld	r24, Z
    15de:	58 2f       	mov	r21, r24
    15e0:	80 91 7c 01 	lds	r24, 0x017C
    15e4:	28 2f       	mov	r18, r24
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	02 c0       	rjmp	.+4      	; 0x15f2 <KEYPAD_GetKey+0x2e>
    15ee:	88 0f       	add	r24, r24
    15f0:	99 1f       	adc	r25, r25
    15f2:	2a 95       	dec	r18
    15f4:	e2 f7       	brpl	.-8      	; 0x15ee <KEYPAD_GetKey+0x2a>
    15f6:	48 2f       	mov	r20, r24
    15f8:	80 91 7d 01 	lds	r24, 0x017D
    15fc:	28 2f       	mov	r18, r24
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	02 c0       	rjmp	.+4      	; 0x160a <KEYPAD_GetKey+0x46>
    1606:	88 0f       	add	r24, r24
    1608:	99 1f       	adc	r25, r25
    160a:	2a 95       	dec	r18
    160c:	e2 f7       	brpl	.-8      	; 0x1606 <KEYPAD_GetKey+0x42>
    160e:	48 2b       	or	r20, r24
    1610:	80 91 7e 01 	lds	r24, 0x017E
    1614:	28 2f       	mov	r18, r24
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	81 e0       	ldi	r24, 0x01	; 1
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <KEYPAD_GetKey+0x5e>
    161e:	88 0f       	add	r24, r24
    1620:	99 1f       	adc	r25, r25
    1622:	2a 95       	dec	r18
    1624:	e2 f7       	brpl	.-8      	; 0x161e <KEYPAD_GetKey+0x5a>
    1626:	48 2b       	or	r20, r24
    1628:	80 91 7f 01 	lds	r24, 0x017F
    162c:	28 2f       	mov	r18, r24
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	02 c0       	rjmp	.+4      	; 0x163a <KEYPAD_GetKey+0x76>
    1636:	88 0f       	add	r24, r24
    1638:	99 1f       	adc	r25, r25
    163a:	2a 95       	dec	r18
    163c:	e2 f7       	brpl	.-8      	; 0x1636 <KEYPAD_GetKey+0x72>
    163e:	84 2b       	or	r24, r20
    1640:	85 2b       	or	r24, r21
    1642:	8c 93       	st	X, r24

		/* clear COLUM number i to check the low voltage when click key */
		KEYPAD_PORT &= ~(1<<KEYPAD_COLUM[i]);
    1644:	a2 e3       	ldi	r26, 0x32	; 50
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	e2 e3       	ldi	r30, 0x32	; 50
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	80 81       	ld	r24, Z
    164e:	48 2f       	mov	r20, r24
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	88 2f       	mov	r24, r24
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	fc 01       	movw	r30, r24
    1658:	e4 58       	subi	r30, 0x84	; 132
    165a:	fe 4f       	sbci	r31, 0xFE	; 254
    165c:	80 81       	ld	r24, Z
    165e:	28 2f       	mov	r18, r24
    1660:	30 e0       	ldi	r19, 0x00	; 0
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	02 2e       	mov	r0, r18
    1668:	02 c0       	rjmp	.+4      	; 0x166e <KEYPAD_GetKey+0xaa>
    166a:	88 0f       	add	r24, r24
    166c:	99 1f       	adc	r25, r25
    166e:	0a 94       	dec	r0
    1670:	e2 f7       	brpl	.-8      	; 0x166a <KEYPAD_GetKey+0xa6>
    1672:	80 95       	com	r24
    1674:	84 23       	and	r24, r20
    1676:	8c 93       	st	X, r24

		/* loop for ROWs */
		for(j= 0 ; j<KEYPAD_ROWS ; j++ )
    1678:	19 82       	std	Y+1, r1	; 0x01
    167a:	48 c0       	rjmp	.+144    	; 0x170c <KEYPAD_GetKey+0x148>
		{
			if (!(KEYPAD_PIN & (1<<KEYPAD_ROW[j])))
    167c:	e0 e3       	ldi	r30, 0x30	; 48
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	80 81       	ld	r24, Z
    1682:	28 2f       	mov	r18, r24
    1684:	30 e0       	ldi	r19, 0x00	; 0
    1686:	89 81       	ldd	r24, Y+1	; 0x01
    1688:	88 2f       	mov	r24, r24
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	fc 01       	movw	r30, r24
    168e:	e8 58       	subi	r30, 0x88	; 136
    1690:	fe 4f       	sbci	r31, 0xFE	; 254
    1692:	80 81       	ld	r24, Z
    1694:	88 2f       	mov	r24, r24
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	a9 01       	movw	r20, r18
    169a:	02 c0       	rjmp	.+4      	; 0x16a0 <KEYPAD_GetKey+0xdc>
    169c:	55 95       	asr	r21
    169e:	47 95       	ror	r20
    16a0:	8a 95       	dec	r24
    16a2:	e2 f7       	brpl	.-8      	; 0x169c <KEYPAD_GetKey+0xd8>
    16a4:	ca 01       	movw	r24, r20
    16a6:	81 70       	andi	r24, 0x01	; 1
    16a8:	90 70       	andi	r25, 0x00	; 0
    16aa:	00 97       	sbiw	r24, 0x00	; 0
    16ac:	61 f5       	brne	.+88     	; 0x1706 <KEYPAD_GetKey+0x142>
			{
				while(!(KEYPAD_PIN & (1<<KEYPAD_ROW[j])));
    16ae:	e0 e3       	ldi	r30, 0x30	; 48
    16b0:	f0 e0       	ldi	r31, 0x00	; 0
    16b2:	80 81       	ld	r24, Z
    16b4:	28 2f       	mov	r18, r24
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	89 81       	ldd	r24, Y+1	; 0x01
    16ba:	88 2f       	mov	r24, r24
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	fc 01       	movw	r30, r24
    16c0:	e8 58       	subi	r30, 0x88	; 136
    16c2:	fe 4f       	sbci	r31, 0xFE	; 254
    16c4:	80 81       	ld	r24, Z
    16c6:	88 2f       	mov	r24, r24
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	a9 01       	movw	r20, r18
    16cc:	02 c0       	rjmp	.+4      	; 0x16d2 <KEYPAD_GetKey+0x10e>
    16ce:	55 95       	asr	r21
    16d0:	47 95       	ror	r20
    16d2:	8a 95       	dec	r24
    16d4:	e2 f7       	brpl	.-8      	; 0x16ce <KEYPAD_GetKey+0x10a>
    16d6:	ca 01       	movw	r24, r20
    16d8:	81 70       	andi	r24, 0x01	; 1
    16da:	90 70       	andi	r25, 0x00	; 0
    16dc:	00 97       	sbiw	r24, 0x00	; 0
    16de:	39 f3       	breq	.-50     	; 0x16ae <KEYPAD_GetKey+0xea>
				return keys[j][i];
    16e0:	89 81       	ldd	r24, Y+1	; 0x01
    16e2:	48 2f       	mov	r20, r24
    16e4:	50 e0       	ldi	r21, 0x00	; 0
    16e6:	8a 81       	ldd	r24, Y+2	; 0x02
    16e8:	28 2f       	mov	r18, r24
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	ca 01       	movw	r24, r20
    16ee:	88 0f       	add	r24, r24
    16f0:	99 1f       	adc	r25, r25
    16f2:	88 0f       	add	r24, r24
    16f4:	99 1f       	adc	r25, r25
    16f6:	82 0f       	add	r24, r18
    16f8:	93 1f       	adc	r25, r19
    16fa:	fc 01       	movw	r30, r24
    16fc:	e0 58       	subi	r30, 0x80	; 128
    16fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1700:	50 81       	ld	r21, Z
    1702:	5b 83       	std	Y+3, r21	; 0x03
    1704:	0f c0       	rjmp	.+30     	; 0x1724 <KEYPAD_GetKey+0x160>

		/* clear COLUM number i to check the low voltage when click key */
		KEYPAD_PORT &= ~(1<<KEYPAD_COLUM[i]);

		/* loop for ROWs */
		for(j= 0 ; j<KEYPAD_ROWS ; j++ )
    1706:	89 81       	ldd	r24, Y+1	; 0x01
    1708:	8f 5f       	subi	r24, 0xFF	; 255
    170a:	89 83       	std	Y+1, r24	; 0x01
    170c:	89 81       	ldd	r24, Y+1	; 0x01
    170e:	84 30       	cpi	r24, 0x04	; 4
    1710:	08 f4       	brcc	.+2      	; 0x1714 <KEYPAD_GetKey+0x150>
    1712:	b4 cf       	rjmp	.-152    	; 0x167c <KEYPAD_GetKey+0xb8>
}
char KEYPAD_GetKey(void)
{
	uint8 i , j ;

	for (i=0 ; i<KEYPAD_COLUMS ; i++)
    1714:	8a 81       	ldd	r24, Y+2	; 0x02
    1716:	8f 5f       	subi	r24, 0xFF	; 255
    1718:	8a 83       	std	Y+2, r24	; 0x02
    171a:	8a 81       	ldd	r24, Y+2	; 0x02
    171c:	84 30       	cpi	r24, 0x04	; 4
    171e:	08 f4       	brcc	.+2      	; 0x1722 <KEYPAD_GetKey+0x15e>
    1720:	59 cf       	rjmp	.-334    	; 0x15d4 <KEYPAD_GetKey+0x10>
				return keys[j][i];
			}
		}
	}

	return 0 ;
    1722:	1b 82       	std	Y+3, r1	; 0x03
    1724:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1726:	0f 90       	pop	r0
    1728:	0f 90       	pop	r0
    172a:	0f 90       	pop	r0
    172c:	cf 91       	pop	r28
    172e:	df 91       	pop	r29
    1730:	08 95       	ret

00001732 <main>:

/*Calculator APIS */
void DO_Operation(uint8 opp);

int main()
{
    1732:	df 93       	push	r29
    1734:	cf 93       	push	r28
    1736:	0f 92       	push	r0
    1738:	cd b7       	in	r28, 0x3d	; 61
    173a:	de b7       	in	r29, 0x3e	; 62
	LCD_init();
    173c:	0e 94 aa 07 	call	0xf54	; 0xf54 <LCD_init>
	KEYPAD_init();
    1740:	0e 94 c9 0a 	call	0x1592	; 0x1592 <KEYPAD_init>
	uint8 pressed_key ;

	while(1)
	{
		pressed_key=KEYPAD_GetKey();
    1744:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <KEYPAD_GetKey>
    1748:	89 83       	std	Y+1, r24	; 0x01
		if (pressed_key != 0)
    174a:	89 81       	ldd	r24, Y+1	; 0x01
    174c:	88 23       	and	r24, r24
    174e:	d1 f3       	breq	.-12     	; 0x1744 <main+0x12>
		{
			LCD_Send_Character(pressed_key);
    1750:	89 81       	ldd	r24, Y+1	; 0x01
    1752:	0e 94 4a 09 	call	0x1294	; 0x1294 <LCD_Send_Character>
			if(pressed_key == '/' || pressed_key == '*' || pressed_key == '-' || pressed_key == '+')
    1756:	89 81       	ldd	r24, Y+1	; 0x01
    1758:	8f 32       	cpi	r24, 0x2F	; 47
    175a:	49 f0       	breq	.+18     	; 0x176e <main+0x3c>
    175c:	89 81       	ldd	r24, Y+1	; 0x01
    175e:	8a 32       	cpi	r24, 0x2A	; 42
    1760:	31 f0       	breq	.+12     	; 0x176e <main+0x3c>
    1762:	89 81       	ldd	r24, Y+1	; 0x01
    1764:	8d 32       	cpi	r24, 0x2D	; 45
    1766:	19 f0       	breq	.+6      	; 0x176e <main+0x3c>
    1768:	89 81       	ldd	r24, Y+1	; 0x01
    176a:	8b 32       	cpi	r24, 0x2B	; 43
    176c:	69 f5       	brne	.+90     	; 0x17c8 <main+0x96>
			{
				if (operation == 0 )
    176e:	80 91 96 01 	lds	r24, 0x0196
    1772:	88 23       	and	r24, r24
    1774:	e9 f4       	brne	.+58     	; 0x17b0 <main+0x7e>
				{
				result = number ;
    1776:	80 91 90 01 	lds	r24, 0x0190
    177a:	90 91 91 01 	lds	r25, 0x0191
    177e:	cc 01       	movw	r24, r24
    1780:	a0 e0       	ldi	r26, 0x00	; 0
    1782:	b0 e0       	ldi	r27, 0x00	; 0
    1784:	bc 01       	movw	r22, r24
    1786:	cd 01       	movw	r24, r26
    1788:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    178c:	dc 01       	movw	r26, r24
    178e:	cb 01       	movw	r24, r22
    1790:	80 93 92 01 	sts	0x0192, r24
    1794:	90 93 93 01 	sts	0x0193, r25
    1798:	a0 93 94 01 	sts	0x0194, r26
    179c:	b0 93 95 01 	sts	0x0195, r27
				operation = pressed_key ;
    17a0:	89 81       	ldd	r24, Y+1	; 0x01
    17a2:	80 93 96 01 	sts	0x0196, r24
				number =0 ;
    17a6:	10 92 91 01 	sts	0x0191, r1
    17aa:	10 92 90 01 	sts	0x0190, r1
    17ae:	ca cf       	rjmp	.-108    	; 0x1744 <main+0x12>
				}
				else
				{
					DO_Operation(operation);
    17b0:	80 91 96 01 	lds	r24, 0x0196
    17b4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <DO_Operation>
					operation = pressed_key ;
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	80 93 96 01 	sts	0x0196, r24
					number = 0;
    17be:	10 92 91 01 	sts	0x0191, r1
    17c2:	10 92 90 01 	sts	0x0190, r1
    17c6:	be cf       	rjmp	.-132    	; 0x1744 <main+0x12>
				}
			}
			else if (pressed_key == '=')
    17c8:	89 81       	ldd	r24, Y+1	; 0x01
    17ca:	8d 33       	cpi	r24, 0x3D	; 61
    17cc:	29 f5       	brne	.+74     	; 0x1818 <main+0xe6>
			{
				DO_Operation(operation);
    17ce:	80 91 96 01 	lds	r24, 0x0196
    17d2:	0e 94 3b 0c 	call	0x1876	; 0x1876 <DO_Operation>
				LCD_Clear_Screen();
    17d6:	0e 94 b7 09 	call	0x136e	; 0x136e <LCD_Clear_Screen>
				LCD_Display_Real_Number(result);
    17da:	80 91 92 01 	lds	r24, 0x0192
    17de:	90 91 93 01 	lds	r25, 0x0193
    17e2:	a0 91 94 01 	lds	r26, 0x0194
    17e6:	b0 91 95 01 	lds	r27, 0x0195
    17ea:	bc 01       	movw	r22, r24
    17ec:	cd 01       	movw	r24, r26
    17ee:	0e 94 17 0a 	call	0x142e	; 0x142e <LCD_Display_Real_Number>
				result =0 ;
    17f2:	80 e0       	ldi	r24, 0x00	; 0
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	a0 e0       	ldi	r26, 0x00	; 0
    17f8:	b0 e0       	ldi	r27, 0x00	; 0
    17fa:	80 93 92 01 	sts	0x0192, r24
    17fe:	90 93 93 01 	sts	0x0193, r25
    1802:	a0 93 94 01 	sts	0x0194, r26
    1806:	b0 93 95 01 	sts	0x0195, r27
				number =0 ;
    180a:	10 92 91 01 	sts	0x0191, r1
    180e:	10 92 90 01 	sts	0x0190, r1
				operation =0 ;
    1812:	10 92 96 01 	sts	0x0196, r1
    1816:	96 cf       	rjmp	.-212    	; 0x1744 <main+0x12>
			}
			else if(pressed_key == 'C')
    1818:	89 81       	ldd	r24, Y+1	; 0x01
    181a:	83 34       	cpi	r24, 0x43	; 67
    181c:	99 f4       	brne	.+38     	; 0x1844 <main+0x112>
			{
				result =0 ;
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	a0 e0       	ldi	r26, 0x00	; 0
    1824:	b0 e0       	ldi	r27, 0x00	; 0
    1826:	80 93 92 01 	sts	0x0192, r24
    182a:	90 93 93 01 	sts	0x0193, r25
    182e:	a0 93 94 01 	sts	0x0194, r26
    1832:	b0 93 95 01 	sts	0x0195, r27
				number =0 ;
    1836:	10 92 91 01 	sts	0x0191, r1
    183a:	10 92 90 01 	sts	0x0190, r1
				LCD_Clear_Screen();
    183e:	0e 94 b7 09 	call	0x136e	; 0x136e <LCD_Clear_Screen>
    1842:	80 cf       	rjmp	.-256    	; 0x1744 <main+0x12>
			}
			else
			{
				number = (number*10)+ (pressed_key - '0');
    1844:	80 91 90 01 	lds	r24, 0x0190
    1848:	90 91 91 01 	lds	r25, 0x0191
    184c:	9c 01       	movw	r18, r24
    184e:	22 0f       	add	r18, r18
    1850:	33 1f       	adc	r19, r19
    1852:	c9 01       	movw	r24, r18
    1854:	88 0f       	add	r24, r24
    1856:	99 1f       	adc	r25, r25
    1858:	88 0f       	add	r24, r24
    185a:	99 1f       	adc	r25, r25
    185c:	28 0f       	add	r18, r24
    185e:	39 1f       	adc	r19, r25
    1860:	89 81       	ldd	r24, Y+1	; 0x01
    1862:	88 2f       	mov	r24, r24
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	82 0f       	add	r24, r18
    1868:	93 1f       	adc	r25, r19
    186a:	c0 97       	sbiw	r24, 0x30	; 48
    186c:	90 93 91 01 	sts	0x0191, r25
    1870:	80 93 90 01 	sts	0x0190, r24
    1874:	67 cf       	rjmp	.-306    	; 0x1744 <main+0x12>

00001876 <DO_Operation>:


	}
}
void DO_Operation(uint8 opp)
{
    1876:	ef 92       	push	r14
    1878:	ff 92       	push	r15
    187a:	0f 93       	push	r16
    187c:	1f 93       	push	r17
    187e:	df 93       	push	r29
    1880:	cf 93       	push	r28
    1882:	00 d0       	rcall	.+0      	; 0x1884 <DO_Operation+0xe>
    1884:	0f 92       	push	r0
    1886:	cd b7       	in	r28, 0x3d	; 61
    1888:	de b7       	in	r29, 0x3e	; 62
    188a:	89 83       	std	Y+1, r24	; 0x01
	switch(opp)
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	28 2f       	mov	r18, r24
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	3b 83       	std	Y+3, r19	; 0x03
    1894:	2a 83       	std	Y+2, r18	; 0x02
    1896:	8a 81       	ldd	r24, Y+2	; 0x02
    1898:	9b 81       	ldd	r25, Y+3	; 0x03
    189a:	8b 32       	cpi	r24, 0x2B	; 43
    189c:	91 05       	cpc	r25, r1
    189e:	09 f4       	brne	.+2      	; 0x18a2 <DO_Operation+0x2c>
    18a0:	83 c0       	rjmp	.+262    	; 0x19a8 <DO_Operation+0x132>
    18a2:	2a 81       	ldd	r18, Y+2	; 0x02
    18a4:	3b 81       	ldd	r19, Y+3	; 0x03
    18a6:	2c 32       	cpi	r18, 0x2C	; 44
    18a8:	31 05       	cpc	r19, r1
    18aa:	34 f4       	brge	.+12     	; 0x18b8 <DO_Operation+0x42>
    18ac:	8a 81       	ldd	r24, Y+2	; 0x02
    18ae:	9b 81       	ldd	r25, Y+3	; 0x03
    18b0:	8a 32       	cpi	r24, 0x2A	; 42
    18b2:	91 05       	cpc	r25, r1
    18b4:	89 f1       	breq	.+98     	; 0x1918 <DO_Operation+0xa2>
    18b6:	9b c0       	rjmp	.+310    	; 0x19ee <DO_Operation+0x178>
    18b8:	2a 81       	ldd	r18, Y+2	; 0x02
    18ba:	3b 81       	ldd	r19, Y+3	; 0x03
    18bc:	2d 32       	cpi	r18, 0x2D	; 45
    18be:	31 05       	cpc	r19, r1
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <DO_Operation+0x4e>
    18c2:	4e c0       	rjmp	.+156    	; 0x1960 <DO_Operation+0xea>
    18c4:	8a 81       	ldd	r24, Y+2	; 0x02
    18c6:	9b 81       	ldd	r25, Y+3	; 0x03
    18c8:	8f 32       	cpi	r24, 0x2F	; 47
    18ca:	91 05       	cpc	r25, r1
    18cc:	09 f0       	breq	.+2      	; 0x18d0 <DO_Operation+0x5a>
    18ce:	8f c0       	rjmp	.+286    	; 0x19ee <DO_Operation+0x178>
	{
	case '/' :
		result /= number ;
    18d0:	e0 90 92 01 	lds	r14, 0x0192
    18d4:	f0 90 93 01 	lds	r15, 0x0193
    18d8:	00 91 94 01 	lds	r16, 0x0194
    18dc:	10 91 95 01 	lds	r17, 0x0195
    18e0:	80 91 90 01 	lds	r24, 0x0190
    18e4:	90 91 91 01 	lds	r25, 0x0191
    18e8:	cc 01       	movw	r24, r24
    18ea:	a0 e0       	ldi	r26, 0x00	; 0
    18ec:	b0 e0       	ldi	r27, 0x00	; 0
    18ee:	bc 01       	movw	r22, r24
    18f0:	cd 01       	movw	r24, r26
    18f2:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    18f6:	9b 01       	movw	r18, r22
    18f8:	ac 01       	movw	r20, r24
    18fa:	c8 01       	movw	r24, r16
    18fc:	b7 01       	movw	r22, r14
    18fe:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1902:	dc 01       	movw	r26, r24
    1904:	cb 01       	movw	r24, r22
    1906:	80 93 92 01 	sts	0x0192, r24
    190a:	90 93 93 01 	sts	0x0193, r25
    190e:	a0 93 94 01 	sts	0x0194, r26
    1912:	b0 93 95 01 	sts	0x0195, r27
    1916:	6b c0       	rjmp	.+214    	; 0x19ee <DO_Operation+0x178>
		break ;
	case '*':
		result *= number ;
    1918:	80 91 90 01 	lds	r24, 0x0190
    191c:	90 91 91 01 	lds	r25, 0x0191
    1920:	cc 01       	movw	r24, r24
    1922:	a0 e0       	ldi	r26, 0x00	; 0
    1924:	b0 e0       	ldi	r27, 0x00	; 0
    1926:	bc 01       	movw	r22, r24
    1928:	cd 01       	movw	r24, r26
    192a:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	20 91 92 01 	lds	r18, 0x0192
    1936:	30 91 93 01 	lds	r19, 0x0193
    193a:	40 91 94 01 	lds	r20, 0x0194
    193e:	50 91 95 01 	lds	r21, 0x0195
    1942:	bc 01       	movw	r22, r24
    1944:	cd 01       	movw	r24, r26
    1946:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    194a:	dc 01       	movw	r26, r24
    194c:	cb 01       	movw	r24, r22
    194e:	80 93 92 01 	sts	0x0192, r24
    1952:	90 93 93 01 	sts	0x0193, r25
    1956:	a0 93 94 01 	sts	0x0194, r26
    195a:	b0 93 95 01 	sts	0x0195, r27
    195e:	47 c0       	rjmp	.+142    	; 0x19ee <DO_Operation+0x178>
		break;
	case '-' :
		result -= number ;
    1960:	e0 90 92 01 	lds	r14, 0x0192
    1964:	f0 90 93 01 	lds	r15, 0x0193
    1968:	00 91 94 01 	lds	r16, 0x0194
    196c:	10 91 95 01 	lds	r17, 0x0195
    1970:	80 91 90 01 	lds	r24, 0x0190
    1974:	90 91 91 01 	lds	r25, 0x0191
    1978:	cc 01       	movw	r24, r24
    197a:	a0 e0       	ldi	r26, 0x00	; 0
    197c:	b0 e0       	ldi	r27, 0x00	; 0
    197e:	bc 01       	movw	r22, r24
    1980:	cd 01       	movw	r24, r26
    1982:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    1986:	9b 01       	movw	r18, r22
    1988:	ac 01       	movw	r20, r24
    198a:	c8 01       	movw	r24, r16
    198c:	b7 01       	movw	r22, r14
    198e:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1992:	dc 01       	movw	r26, r24
    1994:	cb 01       	movw	r24, r22
    1996:	80 93 92 01 	sts	0x0192, r24
    199a:	90 93 93 01 	sts	0x0193, r25
    199e:	a0 93 94 01 	sts	0x0194, r26
    19a2:	b0 93 95 01 	sts	0x0195, r27
    19a6:	23 c0       	rjmp	.+70     	; 0x19ee <DO_Operation+0x178>
		break ;
	case '+' :
		result += number ;
    19a8:	80 91 90 01 	lds	r24, 0x0190
    19ac:	90 91 91 01 	lds	r25, 0x0191
    19b0:	cc 01       	movw	r24, r24
    19b2:	a0 e0       	ldi	r26, 0x00	; 0
    19b4:	b0 e0       	ldi	r27, 0x00	; 0
    19b6:	bc 01       	movw	r22, r24
    19b8:	cd 01       	movw	r24, r26
    19ba:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    19be:	dc 01       	movw	r26, r24
    19c0:	cb 01       	movw	r24, r22
    19c2:	20 91 92 01 	lds	r18, 0x0192
    19c6:	30 91 93 01 	lds	r19, 0x0193
    19ca:	40 91 94 01 	lds	r20, 0x0194
    19ce:	50 91 95 01 	lds	r21, 0x0195
    19d2:	bc 01       	movw	r22, r24
    19d4:	cd 01       	movw	r24, r26
    19d6:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    19da:	dc 01       	movw	r26, r24
    19dc:	cb 01       	movw	r24, r22
    19de:	80 93 92 01 	sts	0x0192, r24
    19e2:	90 93 93 01 	sts	0x0193, r25
    19e6:	a0 93 94 01 	sts	0x0194, r26
    19ea:	b0 93 95 01 	sts	0x0195, r27
		break;
	}

}
    19ee:	0f 90       	pop	r0
    19f0:	0f 90       	pop	r0
    19f2:	0f 90       	pop	r0
    19f4:	cf 91       	pop	r28
    19f6:	df 91       	pop	r29
    19f8:	1f 91       	pop	r17
    19fa:	0f 91       	pop	r16
    19fc:	ff 90       	pop	r15
    19fe:	ef 90       	pop	r14
    1a00:	08 95       	ret

00001a02 <__prologue_saves__>:
    1a02:	2f 92       	push	r2
    1a04:	3f 92       	push	r3
    1a06:	4f 92       	push	r4
    1a08:	5f 92       	push	r5
    1a0a:	6f 92       	push	r6
    1a0c:	7f 92       	push	r7
    1a0e:	8f 92       	push	r8
    1a10:	9f 92       	push	r9
    1a12:	af 92       	push	r10
    1a14:	bf 92       	push	r11
    1a16:	cf 92       	push	r12
    1a18:	df 92       	push	r13
    1a1a:	ef 92       	push	r14
    1a1c:	ff 92       	push	r15
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	cd b7       	in	r28, 0x3d	; 61
    1a28:	de b7       	in	r29, 0x3e	; 62
    1a2a:	ca 1b       	sub	r28, r26
    1a2c:	db 0b       	sbc	r29, r27
    1a2e:	0f b6       	in	r0, 0x3f	; 63
    1a30:	f8 94       	cli
    1a32:	de bf       	out	0x3e, r29	; 62
    1a34:	0f be       	out	0x3f, r0	; 63
    1a36:	cd bf       	out	0x3d, r28	; 61
    1a38:	09 94       	ijmp

00001a3a <__epilogue_restores__>:
    1a3a:	2a 88       	ldd	r2, Y+18	; 0x12
    1a3c:	39 88       	ldd	r3, Y+17	; 0x11
    1a3e:	48 88       	ldd	r4, Y+16	; 0x10
    1a40:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a42:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a44:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a46:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a48:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a4a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a4c:	b9 84       	ldd	r11, Y+9	; 0x09
    1a4e:	c8 84       	ldd	r12, Y+8	; 0x08
    1a50:	df 80       	ldd	r13, Y+7	; 0x07
    1a52:	ee 80       	ldd	r14, Y+6	; 0x06
    1a54:	fd 80       	ldd	r15, Y+5	; 0x05
    1a56:	0c 81       	ldd	r16, Y+4	; 0x04
    1a58:	1b 81       	ldd	r17, Y+3	; 0x03
    1a5a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a5c:	b9 81       	ldd	r27, Y+1	; 0x01
    1a5e:	ce 0f       	add	r28, r30
    1a60:	d1 1d       	adc	r29, r1
    1a62:	0f b6       	in	r0, 0x3f	; 63
    1a64:	f8 94       	cli
    1a66:	de bf       	out	0x3e, r29	; 62
    1a68:	0f be       	out	0x3f, r0	; 63
    1a6a:	cd bf       	out	0x3d, r28	; 61
    1a6c:	ed 01       	movw	r28, r26
    1a6e:	08 95       	ret

00001a70 <sprintf>:
    1a70:	ae e0       	ldi	r26, 0x0E	; 14
    1a72:	b0 e0       	ldi	r27, 0x00	; 0
    1a74:	ee e3       	ldi	r30, 0x3E	; 62
    1a76:	fd e0       	ldi	r31, 0x0D	; 13
    1a78:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <__prologue_saves__+0x1c>
    1a7c:	0d 89       	ldd	r16, Y+21	; 0x15
    1a7e:	1e 89       	ldd	r17, Y+22	; 0x16
    1a80:	86 e0       	ldi	r24, 0x06	; 6
    1a82:	8c 83       	std	Y+4, r24	; 0x04
    1a84:	1a 83       	std	Y+2, r17	; 0x02
    1a86:	09 83       	std	Y+1, r16	; 0x01
    1a88:	8f ef       	ldi	r24, 0xFF	; 255
    1a8a:	9f e7       	ldi	r25, 0x7F	; 127
    1a8c:	9e 83       	std	Y+6, r25	; 0x06
    1a8e:	8d 83       	std	Y+5, r24	; 0x05
    1a90:	9e 01       	movw	r18, r28
    1a92:	27 5e       	subi	r18, 0xE7	; 231
    1a94:	3f 4f       	sbci	r19, 0xFF	; 255
    1a96:	ce 01       	movw	r24, r28
    1a98:	01 96       	adiw	r24, 0x01	; 1
    1a9a:	6f 89       	ldd	r22, Y+23	; 0x17
    1a9c:	78 8d       	ldd	r23, Y+24	; 0x18
    1a9e:	a9 01       	movw	r20, r18
    1aa0:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <vfprintf>
    1aa4:	2f 81       	ldd	r18, Y+7	; 0x07
    1aa6:	38 85       	ldd	r19, Y+8	; 0x08
    1aa8:	02 0f       	add	r16, r18
    1aaa:	13 1f       	adc	r17, r19
    1aac:	f8 01       	movw	r30, r16
    1aae:	10 82       	st	Z, r1
    1ab0:	2e 96       	adiw	r28, 0x0e	; 14
    1ab2:	e4 e0       	ldi	r30, 0x04	; 4
    1ab4:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <__epilogue_restores__+0x1c>

00001ab8 <vfprintf>:
    1ab8:	ab e0       	ldi	r26, 0x0B	; 11
    1aba:	b0 e0       	ldi	r27, 0x00	; 0
    1abc:	e2 e6       	ldi	r30, 0x62	; 98
    1abe:	fd e0       	ldi	r31, 0x0D	; 13
    1ac0:	0c 94 01 0d 	jmp	0x1a02	; 0x1a02 <__prologue_saves__>
    1ac4:	3c 01       	movw	r6, r24
    1ac6:	2b 01       	movw	r4, r22
    1ac8:	5a 01       	movw	r10, r20
    1aca:	fc 01       	movw	r30, r24
    1acc:	17 82       	std	Z+7, r1	; 0x07
    1ace:	16 82       	std	Z+6, r1	; 0x06
    1ad0:	83 81       	ldd	r24, Z+3	; 0x03
    1ad2:	81 fd       	sbrc	r24, 1
    1ad4:	03 c0       	rjmp	.+6      	; 0x1adc <vfprintf+0x24>
    1ad6:	6f ef       	ldi	r22, 0xFF	; 255
    1ad8:	7f ef       	ldi	r23, 0xFF	; 255
    1ada:	c6 c1       	rjmp	.+908    	; 0x1e68 <vfprintf+0x3b0>
    1adc:	9a e0       	ldi	r25, 0x0A	; 10
    1ade:	89 2e       	mov	r8, r25
    1ae0:	1e 01       	movw	r2, r28
    1ae2:	08 94       	sec
    1ae4:	21 1c       	adc	r2, r1
    1ae6:	31 1c       	adc	r3, r1
    1ae8:	f3 01       	movw	r30, r6
    1aea:	23 81       	ldd	r18, Z+3	; 0x03
    1aec:	f2 01       	movw	r30, r4
    1aee:	23 fd       	sbrc	r18, 3
    1af0:	85 91       	lpm	r24, Z+
    1af2:	23 ff       	sbrs	r18, 3
    1af4:	81 91       	ld	r24, Z+
    1af6:	2f 01       	movw	r4, r30
    1af8:	88 23       	and	r24, r24
    1afa:	09 f4       	brne	.+2      	; 0x1afe <vfprintf+0x46>
    1afc:	b2 c1       	rjmp	.+868    	; 0x1e62 <vfprintf+0x3aa>
    1afe:	85 32       	cpi	r24, 0x25	; 37
    1b00:	39 f4       	brne	.+14     	; 0x1b10 <vfprintf+0x58>
    1b02:	23 fd       	sbrc	r18, 3
    1b04:	85 91       	lpm	r24, Z+
    1b06:	23 ff       	sbrs	r18, 3
    1b08:	81 91       	ld	r24, Z+
    1b0a:	2f 01       	movw	r4, r30
    1b0c:	85 32       	cpi	r24, 0x25	; 37
    1b0e:	29 f4       	brne	.+10     	; 0x1b1a <vfprintf+0x62>
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	b3 01       	movw	r22, r6
    1b14:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1b18:	e7 cf       	rjmp	.-50     	; 0x1ae8 <vfprintf+0x30>
    1b1a:	98 2f       	mov	r25, r24
    1b1c:	ff 24       	eor	r15, r15
    1b1e:	ee 24       	eor	r14, r14
    1b20:	99 24       	eor	r9, r9
    1b22:	ff e1       	ldi	r31, 0x1F	; 31
    1b24:	ff 15       	cp	r31, r15
    1b26:	d0 f0       	brcs	.+52     	; 0x1b5c <vfprintf+0xa4>
    1b28:	9b 32       	cpi	r25, 0x2B	; 43
    1b2a:	69 f0       	breq	.+26     	; 0x1b46 <vfprintf+0x8e>
    1b2c:	9c 32       	cpi	r25, 0x2C	; 44
    1b2e:	28 f4       	brcc	.+10     	; 0x1b3a <vfprintf+0x82>
    1b30:	90 32       	cpi	r25, 0x20	; 32
    1b32:	59 f0       	breq	.+22     	; 0x1b4a <vfprintf+0x92>
    1b34:	93 32       	cpi	r25, 0x23	; 35
    1b36:	91 f4       	brne	.+36     	; 0x1b5c <vfprintf+0xa4>
    1b38:	0e c0       	rjmp	.+28     	; 0x1b56 <vfprintf+0x9e>
    1b3a:	9d 32       	cpi	r25, 0x2D	; 45
    1b3c:	49 f0       	breq	.+18     	; 0x1b50 <vfprintf+0x98>
    1b3e:	90 33       	cpi	r25, 0x30	; 48
    1b40:	69 f4       	brne	.+26     	; 0x1b5c <vfprintf+0xa4>
    1b42:	41 e0       	ldi	r20, 0x01	; 1
    1b44:	24 c0       	rjmp	.+72     	; 0x1b8e <vfprintf+0xd6>
    1b46:	52 e0       	ldi	r21, 0x02	; 2
    1b48:	f5 2a       	or	r15, r21
    1b4a:	84 e0       	ldi	r24, 0x04	; 4
    1b4c:	f8 2a       	or	r15, r24
    1b4e:	28 c0       	rjmp	.+80     	; 0x1ba0 <vfprintf+0xe8>
    1b50:	98 e0       	ldi	r25, 0x08	; 8
    1b52:	f9 2a       	or	r15, r25
    1b54:	25 c0       	rjmp	.+74     	; 0x1ba0 <vfprintf+0xe8>
    1b56:	e0 e1       	ldi	r30, 0x10	; 16
    1b58:	fe 2a       	or	r15, r30
    1b5a:	22 c0       	rjmp	.+68     	; 0x1ba0 <vfprintf+0xe8>
    1b5c:	f7 fc       	sbrc	r15, 7
    1b5e:	29 c0       	rjmp	.+82     	; 0x1bb2 <vfprintf+0xfa>
    1b60:	89 2f       	mov	r24, r25
    1b62:	80 53       	subi	r24, 0x30	; 48
    1b64:	8a 30       	cpi	r24, 0x0A	; 10
    1b66:	70 f4       	brcc	.+28     	; 0x1b84 <vfprintf+0xcc>
    1b68:	f6 fe       	sbrs	r15, 6
    1b6a:	05 c0       	rjmp	.+10     	; 0x1b76 <vfprintf+0xbe>
    1b6c:	98 9c       	mul	r9, r8
    1b6e:	90 2c       	mov	r9, r0
    1b70:	11 24       	eor	r1, r1
    1b72:	98 0e       	add	r9, r24
    1b74:	15 c0       	rjmp	.+42     	; 0x1ba0 <vfprintf+0xe8>
    1b76:	e8 9c       	mul	r14, r8
    1b78:	e0 2c       	mov	r14, r0
    1b7a:	11 24       	eor	r1, r1
    1b7c:	e8 0e       	add	r14, r24
    1b7e:	f0 e2       	ldi	r31, 0x20	; 32
    1b80:	ff 2a       	or	r15, r31
    1b82:	0e c0       	rjmp	.+28     	; 0x1ba0 <vfprintf+0xe8>
    1b84:	9e 32       	cpi	r25, 0x2E	; 46
    1b86:	29 f4       	brne	.+10     	; 0x1b92 <vfprintf+0xda>
    1b88:	f6 fc       	sbrc	r15, 6
    1b8a:	6b c1       	rjmp	.+726    	; 0x1e62 <vfprintf+0x3aa>
    1b8c:	40 e4       	ldi	r20, 0x40	; 64
    1b8e:	f4 2a       	or	r15, r20
    1b90:	07 c0       	rjmp	.+14     	; 0x1ba0 <vfprintf+0xe8>
    1b92:	9c 36       	cpi	r25, 0x6C	; 108
    1b94:	19 f4       	brne	.+6      	; 0x1b9c <vfprintf+0xe4>
    1b96:	50 e8       	ldi	r21, 0x80	; 128
    1b98:	f5 2a       	or	r15, r21
    1b9a:	02 c0       	rjmp	.+4      	; 0x1ba0 <vfprintf+0xe8>
    1b9c:	98 36       	cpi	r25, 0x68	; 104
    1b9e:	49 f4       	brne	.+18     	; 0x1bb2 <vfprintf+0xfa>
    1ba0:	f2 01       	movw	r30, r4
    1ba2:	23 fd       	sbrc	r18, 3
    1ba4:	95 91       	lpm	r25, Z+
    1ba6:	23 ff       	sbrs	r18, 3
    1ba8:	91 91       	ld	r25, Z+
    1baa:	2f 01       	movw	r4, r30
    1bac:	99 23       	and	r25, r25
    1bae:	09 f0       	breq	.+2      	; 0x1bb2 <vfprintf+0xfa>
    1bb0:	b8 cf       	rjmp	.-144    	; 0x1b22 <vfprintf+0x6a>
    1bb2:	89 2f       	mov	r24, r25
    1bb4:	85 54       	subi	r24, 0x45	; 69
    1bb6:	83 30       	cpi	r24, 0x03	; 3
    1bb8:	18 f0       	brcs	.+6      	; 0x1bc0 <vfprintf+0x108>
    1bba:	80 52       	subi	r24, 0x20	; 32
    1bbc:	83 30       	cpi	r24, 0x03	; 3
    1bbe:	38 f4       	brcc	.+14     	; 0x1bce <vfprintf+0x116>
    1bc0:	44 e0       	ldi	r20, 0x04	; 4
    1bc2:	50 e0       	ldi	r21, 0x00	; 0
    1bc4:	a4 0e       	add	r10, r20
    1bc6:	b5 1e       	adc	r11, r21
    1bc8:	5f e3       	ldi	r21, 0x3F	; 63
    1bca:	59 83       	std	Y+1, r21	; 0x01
    1bcc:	0f c0       	rjmp	.+30     	; 0x1bec <vfprintf+0x134>
    1bce:	93 36       	cpi	r25, 0x63	; 99
    1bd0:	31 f0       	breq	.+12     	; 0x1bde <vfprintf+0x126>
    1bd2:	93 37       	cpi	r25, 0x73	; 115
    1bd4:	79 f0       	breq	.+30     	; 0x1bf4 <vfprintf+0x13c>
    1bd6:	93 35       	cpi	r25, 0x53	; 83
    1bd8:	09 f0       	breq	.+2      	; 0x1bdc <vfprintf+0x124>
    1bda:	56 c0       	rjmp	.+172    	; 0x1c88 <vfprintf+0x1d0>
    1bdc:	20 c0       	rjmp	.+64     	; 0x1c1e <vfprintf+0x166>
    1bde:	f5 01       	movw	r30, r10
    1be0:	80 81       	ld	r24, Z
    1be2:	89 83       	std	Y+1, r24	; 0x01
    1be4:	42 e0       	ldi	r20, 0x02	; 2
    1be6:	50 e0       	ldi	r21, 0x00	; 0
    1be8:	a4 0e       	add	r10, r20
    1bea:	b5 1e       	adc	r11, r21
    1bec:	61 01       	movw	r12, r2
    1bee:	01 e0       	ldi	r16, 0x01	; 1
    1bf0:	10 e0       	ldi	r17, 0x00	; 0
    1bf2:	12 c0       	rjmp	.+36     	; 0x1c18 <vfprintf+0x160>
    1bf4:	f5 01       	movw	r30, r10
    1bf6:	c0 80       	ld	r12, Z
    1bf8:	d1 80       	ldd	r13, Z+1	; 0x01
    1bfa:	f6 fc       	sbrc	r15, 6
    1bfc:	03 c0       	rjmp	.+6      	; 0x1c04 <vfprintf+0x14c>
    1bfe:	6f ef       	ldi	r22, 0xFF	; 255
    1c00:	7f ef       	ldi	r23, 0xFF	; 255
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <vfprintf+0x150>
    1c04:	69 2d       	mov	r22, r9
    1c06:	70 e0       	ldi	r23, 0x00	; 0
    1c08:	42 e0       	ldi	r20, 0x02	; 2
    1c0a:	50 e0       	ldi	r21, 0x00	; 0
    1c0c:	a4 0e       	add	r10, r20
    1c0e:	b5 1e       	adc	r11, r21
    1c10:	c6 01       	movw	r24, r12
    1c12:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <strnlen>
    1c16:	8c 01       	movw	r16, r24
    1c18:	5f e7       	ldi	r21, 0x7F	; 127
    1c1a:	f5 22       	and	r15, r21
    1c1c:	14 c0       	rjmp	.+40     	; 0x1c46 <vfprintf+0x18e>
    1c1e:	f5 01       	movw	r30, r10
    1c20:	c0 80       	ld	r12, Z
    1c22:	d1 80       	ldd	r13, Z+1	; 0x01
    1c24:	f6 fc       	sbrc	r15, 6
    1c26:	03 c0       	rjmp	.+6      	; 0x1c2e <vfprintf+0x176>
    1c28:	6f ef       	ldi	r22, 0xFF	; 255
    1c2a:	7f ef       	ldi	r23, 0xFF	; 255
    1c2c:	02 c0       	rjmp	.+4      	; 0x1c32 <vfprintf+0x17a>
    1c2e:	69 2d       	mov	r22, r9
    1c30:	70 e0       	ldi	r23, 0x00	; 0
    1c32:	42 e0       	ldi	r20, 0x02	; 2
    1c34:	50 e0       	ldi	r21, 0x00	; 0
    1c36:	a4 0e       	add	r10, r20
    1c38:	b5 1e       	adc	r11, r21
    1c3a:	c6 01       	movw	r24, r12
    1c3c:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <strnlen_P>
    1c40:	8c 01       	movw	r16, r24
    1c42:	50 e8       	ldi	r21, 0x80	; 128
    1c44:	f5 2a       	or	r15, r21
    1c46:	f3 fe       	sbrs	r15, 3
    1c48:	07 c0       	rjmp	.+14     	; 0x1c58 <vfprintf+0x1a0>
    1c4a:	1a c0       	rjmp	.+52     	; 0x1c80 <vfprintf+0x1c8>
    1c4c:	80 e2       	ldi	r24, 0x20	; 32
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	b3 01       	movw	r22, r6
    1c52:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1c56:	ea 94       	dec	r14
    1c58:	8e 2d       	mov	r24, r14
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	08 17       	cp	r16, r24
    1c5e:	19 07       	cpc	r17, r25
    1c60:	a8 f3       	brcs	.-22     	; 0x1c4c <vfprintf+0x194>
    1c62:	0e c0       	rjmp	.+28     	; 0x1c80 <vfprintf+0x1c8>
    1c64:	f6 01       	movw	r30, r12
    1c66:	f7 fc       	sbrc	r15, 7
    1c68:	85 91       	lpm	r24, Z+
    1c6a:	f7 fe       	sbrs	r15, 7
    1c6c:	81 91       	ld	r24, Z+
    1c6e:	6f 01       	movw	r12, r30
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	b3 01       	movw	r22, r6
    1c74:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1c78:	e1 10       	cpse	r14, r1
    1c7a:	ea 94       	dec	r14
    1c7c:	01 50       	subi	r16, 0x01	; 1
    1c7e:	10 40       	sbci	r17, 0x00	; 0
    1c80:	01 15       	cp	r16, r1
    1c82:	11 05       	cpc	r17, r1
    1c84:	79 f7       	brne	.-34     	; 0x1c64 <vfprintf+0x1ac>
    1c86:	ea c0       	rjmp	.+468    	; 0x1e5c <vfprintf+0x3a4>
    1c88:	94 36       	cpi	r25, 0x64	; 100
    1c8a:	11 f0       	breq	.+4      	; 0x1c90 <vfprintf+0x1d8>
    1c8c:	99 36       	cpi	r25, 0x69	; 105
    1c8e:	69 f5       	brne	.+90     	; 0x1cea <vfprintf+0x232>
    1c90:	f7 fe       	sbrs	r15, 7
    1c92:	08 c0       	rjmp	.+16     	; 0x1ca4 <vfprintf+0x1ec>
    1c94:	f5 01       	movw	r30, r10
    1c96:	20 81       	ld	r18, Z
    1c98:	31 81       	ldd	r19, Z+1	; 0x01
    1c9a:	42 81       	ldd	r20, Z+2	; 0x02
    1c9c:	53 81       	ldd	r21, Z+3	; 0x03
    1c9e:	84 e0       	ldi	r24, 0x04	; 4
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	0a c0       	rjmp	.+20     	; 0x1cb8 <vfprintf+0x200>
    1ca4:	f5 01       	movw	r30, r10
    1ca6:	80 81       	ld	r24, Z
    1ca8:	91 81       	ldd	r25, Z+1	; 0x01
    1caa:	9c 01       	movw	r18, r24
    1cac:	44 27       	eor	r20, r20
    1cae:	37 fd       	sbrc	r19, 7
    1cb0:	40 95       	com	r20
    1cb2:	54 2f       	mov	r21, r20
    1cb4:	82 e0       	ldi	r24, 0x02	; 2
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	a8 0e       	add	r10, r24
    1cba:	b9 1e       	adc	r11, r25
    1cbc:	9f e6       	ldi	r25, 0x6F	; 111
    1cbe:	f9 22       	and	r15, r25
    1cc0:	57 ff       	sbrs	r21, 7
    1cc2:	09 c0       	rjmp	.+18     	; 0x1cd6 <vfprintf+0x21e>
    1cc4:	50 95       	com	r21
    1cc6:	40 95       	com	r20
    1cc8:	30 95       	com	r19
    1cca:	21 95       	neg	r18
    1ccc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cce:	4f 4f       	sbci	r20, 0xFF	; 255
    1cd0:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd2:	e0 e8       	ldi	r30, 0x80	; 128
    1cd4:	fe 2a       	or	r15, r30
    1cd6:	ca 01       	movw	r24, r20
    1cd8:	b9 01       	movw	r22, r18
    1cda:	a1 01       	movw	r20, r2
    1cdc:	2a e0       	ldi	r18, 0x0A	; 10
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__ultoa_invert>
    1ce4:	d8 2e       	mov	r13, r24
    1ce6:	d2 18       	sub	r13, r2
    1ce8:	40 c0       	rjmp	.+128    	; 0x1d6a <vfprintf+0x2b2>
    1cea:	95 37       	cpi	r25, 0x75	; 117
    1cec:	29 f4       	brne	.+10     	; 0x1cf8 <vfprintf+0x240>
    1cee:	1f 2d       	mov	r17, r15
    1cf0:	1f 7e       	andi	r17, 0xEF	; 239
    1cf2:	2a e0       	ldi	r18, 0x0A	; 10
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	1d c0       	rjmp	.+58     	; 0x1d32 <vfprintf+0x27a>
    1cf8:	1f 2d       	mov	r17, r15
    1cfa:	19 7f       	andi	r17, 0xF9	; 249
    1cfc:	9f 36       	cpi	r25, 0x6F	; 111
    1cfe:	61 f0       	breq	.+24     	; 0x1d18 <vfprintf+0x260>
    1d00:	90 37       	cpi	r25, 0x70	; 112
    1d02:	20 f4       	brcc	.+8      	; 0x1d0c <vfprintf+0x254>
    1d04:	98 35       	cpi	r25, 0x58	; 88
    1d06:	09 f0       	breq	.+2      	; 0x1d0a <vfprintf+0x252>
    1d08:	ac c0       	rjmp	.+344    	; 0x1e62 <vfprintf+0x3aa>
    1d0a:	0f c0       	rjmp	.+30     	; 0x1d2a <vfprintf+0x272>
    1d0c:	90 37       	cpi	r25, 0x70	; 112
    1d0e:	39 f0       	breq	.+14     	; 0x1d1e <vfprintf+0x266>
    1d10:	98 37       	cpi	r25, 0x78	; 120
    1d12:	09 f0       	breq	.+2      	; 0x1d16 <vfprintf+0x25e>
    1d14:	a6 c0       	rjmp	.+332    	; 0x1e62 <vfprintf+0x3aa>
    1d16:	04 c0       	rjmp	.+8      	; 0x1d20 <vfprintf+0x268>
    1d18:	28 e0       	ldi	r18, 0x08	; 8
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	0a c0       	rjmp	.+20     	; 0x1d32 <vfprintf+0x27a>
    1d1e:	10 61       	ori	r17, 0x10	; 16
    1d20:	14 fd       	sbrc	r17, 4
    1d22:	14 60       	ori	r17, 0x04	; 4
    1d24:	20 e1       	ldi	r18, 0x10	; 16
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	04 c0       	rjmp	.+8      	; 0x1d32 <vfprintf+0x27a>
    1d2a:	14 fd       	sbrc	r17, 4
    1d2c:	16 60       	ori	r17, 0x06	; 6
    1d2e:	20 e1       	ldi	r18, 0x10	; 16
    1d30:	32 e0       	ldi	r19, 0x02	; 2
    1d32:	17 ff       	sbrs	r17, 7
    1d34:	08 c0       	rjmp	.+16     	; 0x1d46 <vfprintf+0x28e>
    1d36:	f5 01       	movw	r30, r10
    1d38:	60 81       	ld	r22, Z
    1d3a:	71 81       	ldd	r23, Z+1	; 0x01
    1d3c:	82 81       	ldd	r24, Z+2	; 0x02
    1d3e:	93 81       	ldd	r25, Z+3	; 0x03
    1d40:	44 e0       	ldi	r20, 0x04	; 4
    1d42:	50 e0       	ldi	r21, 0x00	; 0
    1d44:	08 c0       	rjmp	.+16     	; 0x1d56 <vfprintf+0x29e>
    1d46:	f5 01       	movw	r30, r10
    1d48:	80 81       	ld	r24, Z
    1d4a:	91 81       	ldd	r25, Z+1	; 0x01
    1d4c:	bc 01       	movw	r22, r24
    1d4e:	80 e0       	ldi	r24, 0x00	; 0
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	42 e0       	ldi	r20, 0x02	; 2
    1d54:	50 e0       	ldi	r21, 0x00	; 0
    1d56:	a4 0e       	add	r10, r20
    1d58:	b5 1e       	adc	r11, r21
    1d5a:	a1 01       	movw	r20, r2
    1d5c:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__ultoa_invert>
    1d60:	d8 2e       	mov	r13, r24
    1d62:	d2 18       	sub	r13, r2
    1d64:	8f e7       	ldi	r24, 0x7F	; 127
    1d66:	f8 2e       	mov	r15, r24
    1d68:	f1 22       	and	r15, r17
    1d6a:	f6 fe       	sbrs	r15, 6
    1d6c:	0b c0       	rjmp	.+22     	; 0x1d84 <vfprintf+0x2cc>
    1d6e:	5e ef       	ldi	r21, 0xFE	; 254
    1d70:	f5 22       	and	r15, r21
    1d72:	d9 14       	cp	r13, r9
    1d74:	38 f4       	brcc	.+14     	; 0x1d84 <vfprintf+0x2cc>
    1d76:	f4 fe       	sbrs	r15, 4
    1d78:	07 c0       	rjmp	.+14     	; 0x1d88 <vfprintf+0x2d0>
    1d7a:	f2 fc       	sbrc	r15, 2
    1d7c:	05 c0       	rjmp	.+10     	; 0x1d88 <vfprintf+0x2d0>
    1d7e:	8f ee       	ldi	r24, 0xEF	; 239
    1d80:	f8 22       	and	r15, r24
    1d82:	02 c0       	rjmp	.+4      	; 0x1d88 <vfprintf+0x2d0>
    1d84:	1d 2d       	mov	r17, r13
    1d86:	01 c0       	rjmp	.+2      	; 0x1d8a <vfprintf+0x2d2>
    1d88:	19 2d       	mov	r17, r9
    1d8a:	f4 fe       	sbrs	r15, 4
    1d8c:	0d c0       	rjmp	.+26     	; 0x1da8 <vfprintf+0x2f0>
    1d8e:	fe 01       	movw	r30, r28
    1d90:	ed 0d       	add	r30, r13
    1d92:	f1 1d       	adc	r31, r1
    1d94:	80 81       	ld	r24, Z
    1d96:	80 33       	cpi	r24, 0x30	; 48
    1d98:	19 f4       	brne	.+6      	; 0x1da0 <vfprintf+0x2e8>
    1d9a:	99 ee       	ldi	r25, 0xE9	; 233
    1d9c:	f9 22       	and	r15, r25
    1d9e:	08 c0       	rjmp	.+16     	; 0x1db0 <vfprintf+0x2f8>
    1da0:	1f 5f       	subi	r17, 0xFF	; 255
    1da2:	f2 fe       	sbrs	r15, 2
    1da4:	05 c0       	rjmp	.+10     	; 0x1db0 <vfprintf+0x2f8>
    1da6:	03 c0       	rjmp	.+6      	; 0x1dae <vfprintf+0x2f6>
    1da8:	8f 2d       	mov	r24, r15
    1daa:	86 78       	andi	r24, 0x86	; 134
    1dac:	09 f0       	breq	.+2      	; 0x1db0 <vfprintf+0x2f8>
    1dae:	1f 5f       	subi	r17, 0xFF	; 255
    1db0:	0f 2d       	mov	r16, r15
    1db2:	f3 fc       	sbrc	r15, 3
    1db4:	14 c0       	rjmp	.+40     	; 0x1dde <vfprintf+0x326>
    1db6:	f0 fe       	sbrs	r15, 0
    1db8:	0f c0       	rjmp	.+30     	; 0x1dd8 <vfprintf+0x320>
    1dba:	1e 15       	cp	r17, r14
    1dbc:	10 f0       	brcs	.+4      	; 0x1dc2 <vfprintf+0x30a>
    1dbe:	9d 2c       	mov	r9, r13
    1dc0:	0b c0       	rjmp	.+22     	; 0x1dd8 <vfprintf+0x320>
    1dc2:	9d 2c       	mov	r9, r13
    1dc4:	9e 0c       	add	r9, r14
    1dc6:	91 1a       	sub	r9, r17
    1dc8:	1e 2d       	mov	r17, r14
    1dca:	06 c0       	rjmp	.+12     	; 0x1dd8 <vfprintf+0x320>
    1dcc:	80 e2       	ldi	r24, 0x20	; 32
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	b3 01       	movw	r22, r6
    1dd2:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1dd6:	1f 5f       	subi	r17, 0xFF	; 255
    1dd8:	1e 15       	cp	r17, r14
    1dda:	c0 f3       	brcs	.-16     	; 0x1dcc <vfprintf+0x314>
    1ddc:	04 c0       	rjmp	.+8      	; 0x1de6 <vfprintf+0x32e>
    1dde:	1e 15       	cp	r17, r14
    1de0:	10 f4       	brcc	.+4      	; 0x1de6 <vfprintf+0x32e>
    1de2:	e1 1a       	sub	r14, r17
    1de4:	01 c0       	rjmp	.+2      	; 0x1de8 <vfprintf+0x330>
    1de6:	ee 24       	eor	r14, r14
    1de8:	04 ff       	sbrs	r16, 4
    1dea:	0f c0       	rjmp	.+30     	; 0x1e0a <vfprintf+0x352>
    1dec:	80 e3       	ldi	r24, 0x30	; 48
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	b3 01       	movw	r22, r6
    1df2:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1df6:	02 ff       	sbrs	r16, 2
    1df8:	1d c0       	rjmp	.+58     	; 0x1e34 <vfprintf+0x37c>
    1dfa:	01 fd       	sbrc	r16, 1
    1dfc:	03 c0       	rjmp	.+6      	; 0x1e04 <vfprintf+0x34c>
    1dfe:	88 e7       	ldi	r24, 0x78	; 120
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	0e c0       	rjmp	.+28     	; 0x1e20 <vfprintf+0x368>
    1e04:	88 e5       	ldi	r24, 0x58	; 88
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	0b c0       	rjmp	.+22     	; 0x1e20 <vfprintf+0x368>
    1e0a:	80 2f       	mov	r24, r16
    1e0c:	86 78       	andi	r24, 0x86	; 134
    1e0e:	91 f0       	breq	.+36     	; 0x1e34 <vfprintf+0x37c>
    1e10:	01 ff       	sbrs	r16, 1
    1e12:	02 c0       	rjmp	.+4      	; 0x1e18 <vfprintf+0x360>
    1e14:	8b e2       	ldi	r24, 0x2B	; 43
    1e16:	01 c0       	rjmp	.+2      	; 0x1e1a <vfprintf+0x362>
    1e18:	80 e2       	ldi	r24, 0x20	; 32
    1e1a:	f7 fc       	sbrc	r15, 7
    1e1c:	8d e2       	ldi	r24, 0x2D	; 45
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	b3 01       	movw	r22, r6
    1e22:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1e26:	06 c0       	rjmp	.+12     	; 0x1e34 <vfprintf+0x37c>
    1e28:	80 e3       	ldi	r24, 0x30	; 48
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	b3 01       	movw	r22, r6
    1e2e:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1e32:	9a 94       	dec	r9
    1e34:	d9 14       	cp	r13, r9
    1e36:	c0 f3       	brcs	.-16     	; 0x1e28 <vfprintf+0x370>
    1e38:	da 94       	dec	r13
    1e3a:	f1 01       	movw	r30, r2
    1e3c:	ed 0d       	add	r30, r13
    1e3e:	f1 1d       	adc	r31, r1
    1e40:	80 81       	ld	r24, Z
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	b3 01       	movw	r22, r6
    1e46:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1e4a:	dd 20       	and	r13, r13
    1e4c:	a9 f7       	brne	.-22     	; 0x1e38 <vfprintf+0x380>
    1e4e:	06 c0       	rjmp	.+12     	; 0x1e5c <vfprintf+0x3a4>
    1e50:	80 e2       	ldi	r24, 0x20	; 32
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	b3 01       	movw	r22, r6
    1e56:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <fputc>
    1e5a:	ea 94       	dec	r14
    1e5c:	ee 20       	and	r14, r14
    1e5e:	c1 f7       	brne	.-16     	; 0x1e50 <vfprintf+0x398>
    1e60:	43 ce       	rjmp	.-890    	; 0x1ae8 <vfprintf+0x30>
    1e62:	f3 01       	movw	r30, r6
    1e64:	66 81       	ldd	r22, Z+6	; 0x06
    1e66:	77 81       	ldd	r23, Z+7	; 0x07
    1e68:	cb 01       	movw	r24, r22
    1e6a:	2b 96       	adiw	r28, 0x0b	; 11
    1e6c:	e2 e1       	ldi	r30, 0x12	; 18
    1e6e:	0c 94 1d 0d 	jmp	0x1a3a	; 0x1a3a <__epilogue_restores__>

00001e72 <strnlen_P>:
    1e72:	fc 01       	movw	r30, r24
    1e74:	05 90       	lpm	r0, Z+
    1e76:	61 50       	subi	r22, 0x01	; 1
    1e78:	70 40       	sbci	r23, 0x00	; 0
    1e7a:	01 10       	cpse	r0, r1
    1e7c:	d8 f7       	brcc	.-10     	; 0x1e74 <strnlen_P+0x2>
    1e7e:	80 95       	com	r24
    1e80:	90 95       	com	r25
    1e82:	8e 0f       	add	r24, r30
    1e84:	9f 1f       	adc	r25, r31
    1e86:	08 95       	ret

00001e88 <strnlen>:
    1e88:	fc 01       	movw	r30, r24
    1e8a:	61 50       	subi	r22, 0x01	; 1
    1e8c:	70 40       	sbci	r23, 0x00	; 0
    1e8e:	01 90       	ld	r0, Z+
    1e90:	01 10       	cpse	r0, r1
    1e92:	d8 f7       	brcc	.-10     	; 0x1e8a <strnlen+0x2>
    1e94:	80 95       	com	r24
    1e96:	90 95       	com	r25
    1e98:	8e 0f       	add	r24, r30
    1e9a:	9f 1f       	adc	r25, r31
    1e9c:	08 95       	ret

00001e9e <fputc>:
    1e9e:	0f 93       	push	r16
    1ea0:	1f 93       	push	r17
    1ea2:	cf 93       	push	r28
    1ea4:	df 93       	push	r29
    1ea6:	8c 01       	movw	r16, r24
    1ea8:	eb 01       	movw	r28, r22
    1eaa:	8b 81       	ldd	r24, Y+3	; 0x03
    1eac:	81 ff       	sbrs	r24, 1
    1eae:	1b c0       	rjmp	.+54     	; 0x1ee6 <fputc+0x48>
    1eb0:	82 ff       	sbrs	r24, 2
    1eb2:	0d c0       	rjmp	.+26     	; 0x1ece <fputc+0x30>
    1eb4:	2e 81       	ldd	r18, Y+6	; 0x06
    1eb6:	3f 81       	ldd	r19, Y+7	; 0x07
    1eb8:	8c 81       	ldd	r24, Y+4	; 0x04
    1eba:	9d 81       	ldd	r25, Y+5	; 0x05
    1ebc:	28 17       	cp	r18, r24
    1ebe:	39 07       	cpc	r19, r25
    1ec0:	64 f4       	brge	.+24     	; 0x1eda <fputc+0x3c>
    1ec2:	e8 81       	ld	r30, Y
    1ec4:	f9 81       	ldd	r31, Y+1	; 0x01
    1ec6:	01 93       	st	Z+, r16
    1ec8:	f9 83       	std	Y+1, r31	; 0x01
    1eca:	e8 83       	st	Y, r30
    1ecc:	06 c0       	rjmp	.+12     	; 0x1eda <fputc+0x3c>
    1ece:	e8 85       	ldd	r30, Y+8	; 0x08
    1ed0:	f9 85       	ldd	r31, Y+9	; 0x09
    1ed2:	80 2f       	mov	r24, r16
    1ed4:	09 95       	icall
    1ed6:	89 2b       	or	r24, r25
    1ed8:	31 f4       	brne	.+12     	; 0x1ee6 <fputc+0x48>
    1eda:	8e 81       	ldd	r24, Y+6	; 0x06
    1edc:	9f 81       	ldd	r25, Y+7	; 0x07
    1ede:	01 96       	adiw	r24, 0x01	; 1
    1ee0:	9f 83       	std	Y+7, r25	; 0x07
    1ee2:	8e 83       	std	Y+6, r24	; 0x06
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <fputc+0x4c>
    1ee6:	0f ef       	ldi	r16, 0xFF	; 255
    1ee8:	1f ef       	ldi	r17, 0xFF	; 255
    1eea:	c8 01       	movw	r24, r16
    1eec:	df 91       	pop	r29
    1eee:	cf 91       	pop	r28
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	08 95       	ret

00001ef6 <__ultoa_invert>:
    1ef6:	fa 01       	movw	r30, r20
    1ef8:	aa 27       	eor	r26, r26
    1efa:	28 30       	cpi	r18, 0x08	; 8
    1efc:	51 f1       	breq	.+84     	; 0x1f52 <__ultoa_invert+0x5c>
    1efe:	20 31       	cpi	r18, 0x10	; 16
    1f00:	81 f1       	breq	.+96     	; 0x1f62 <__ultoa_invert+0x6c>
    1f02:	e8 94       	clt
    1f04:	6f 93       	push	r22
    1f06:	6e 7f       	andi	r22, 0xFE	; 254
    1f08:	6e 5f       	subi	r22, 0xFE	; 254
    1f0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f10:	af 4f       	sbci	r26, 0xFF	; 255
    1f12:	b1 e0       	ldi	r27, 0x01	; 1
    1f14:	3e d0       	rcall	.+124    	; 0x1f92 <__ultoa_invert+0x9c>
    1f16:	b4 e0       	ldi	r27, 0x04	; 4
    1f18:	3c d0       	rcall	.+120    	; 0x1f92 <__ultoa_invert+0x9c>
    1f1a:	67 0f       	add	r22, r23
    1f1c:	78 1f       	adc	r23, r24
    1f1e:	89 1f       	adc	r24, r25
    1f20:	9a 1f       	adc	r25, r26
    1f22:	a1 1d       	adc	r26, r1
    1f24:	68 0f       	add	r22, r24
    1f26:	79 1f       	adc	r23, r25
    1f28:	8a 1f       	adc	r24, r26
    1f2a:	91 1d       	adc	r25, r1
    1f2c:	a1 1d       	adc	r26, r1
    1f2e:	6a 0f       	add	r22, r26
    1f30:	71 1d       	adc	r23, r1
    1f32:	81 1d       	adc	r24, r1
    1f34:	91 1d       	adc	r25, r1
    1f36:	a1 1d       	adc	r26, r1
    1f38:	20 d0       	rcall	.+64     	; 0x1f7a <__ultoa_invert+0x84>
    1f3a:	09 f4       	brne	.+2      	; 0x1f3e <__ultoa_invert+0x48>
    1f3c:	68 94       	set
    1f3e:	3f 91       	pop	r19
    1f40:	2a e0       	ldi	r18, 0x0A	; 10
    1f42:	26 9f       	mul	r18, r22
    1f44:	11 24       	eor	r1, r1
    1f46:	30 19       	sub	r19, r0
    1f48:	30 5d       	subi	r19, 0xD0	; 208
    1f4a:	31 93       	st	Z+, r19
    1f4c:	de f6       	brtc	.-74     	; 0x1f04 <__ultoa_invert+0xe>
    1f4e:	cf 01       	movw	r24, r30
    1f50:	08 95       	ret
    1f52:	46 2f       	mov	r20, r22
    1f54:	47 70       	andi	r20, 0x07	; 7
    1f56:	40 5d       	subi	r20, 0xD0	; 208
    1f58:	41 93       	st	Z+, r20
    1f5a:	b3 e0       	ldi	r27, 0x03	; 3
    1f5c:	0f d0       	rcall	.+30     	; 0x1f7c <__ultoa_invert+0x86>
    1f5e:	c9 f7       	brne	.-14     	; 0x1f52 <__ultoa_invert+0x5c>
    1f60:	f6 cf       	rjmp	.-20     	; 0x1f4e <__ultoa_invert+0x58>
    1f62:	46 2f       	mov	r20, r22
    1f64:	4f 70       	andi	r20, 0x0F	; 15
    1f66:	40 5d       	subi	r20, 0xD0	; 208
    1f68:	4a 33       	cpi	r20, 0x3A	; 58
    1f6a:	18 f0       	brcs	.+6      	; 0x1f72 <__ultoa_invert+0x7c>
    1f6c:	49 5d       	subi	r20, 0xD9	; 217
    1f6e:	31 fd       	sbrc	r19, 1
    1f70:	40 52       	subi	r20, 0x20	; 32
    1f72:	41 93       	st	Z+, r20
    1f74:	02 d0       	rcall	.+4      	; 0x1f7a <__ultoa_invert+0x84>
    1f76:	a9 f7       	brne	.-22     	; 0x1f62 <__ultoa_invert+0x6c>
    1f78:	ea cf       	rjmp	.-44     	; 0x1f4e <__ultoa_invert+0x58>
    1f7a:	b4 e0       	ldi	r27, 0x04	; 4
    1f7c:	a6 95       	lsr	r26
    1f7e:	97 95       	ror	r25
    1f80:	87 95       	ror	r24
    1f82:	77 95       	ror	r23
    1f84:	67 95       	ror	r22
    1f86:	ba 95       	dec	r27
    1f88:	c9 f7       	brne	.-14     	; 0x1f7c <__ultoa_invert+0x86>
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	61 05       	cpc	r22, r1
    1f8e:	71 05       	cpc	r23, r1
    1f90:	08 95       	ret
    1f92:	9b 01       	movw	r18, r22
    1f94:	ac 01       	movw	r20, r24
    1f96:	0a 2e       	mov	r0, r26
    1f98:	06 94       	lsr	r0
    1f9a:	57 95       	ror	r21
    1f9c:	47 95       	ror	r20
    1f9e:	37 95       	ror	r19
    1fa0:	27 95       	ror	r18
    1fa2:	ba 95       	dec	r27
    1fa4:	c9 f7       	brne	.-14     	; 0x1f98 <__ultoa_invert+0xa2>
    1fa6:	62 0f       	add	r22, r18
    1fa8:	73 1f       	adc	r23, r19
    1faa:	84 1f       	adc	r24, r20
    1fac:	95 1f       	adc	r25, r21
    1fae:	a0 1d       	adc	r26, r0
    1fb0:	08 95       	ret

00001fb2 <_exit>:
    1fb2:	f8 94       	cli

00001fb4 <__stop_program>:
    1fb4:	ff cf       	rjmp	.-2      	; 0x1fb4 <__stop_program>
